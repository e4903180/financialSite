{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"active\", \"children\", \"className\", \"onRemove\", \"tabIndex\"],\n    _excluded2 = [\"children\", \"option\", \"readOnly\"],\n    _excluded3 = [\"ref\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport cx from 'classnames';\nimport React, { forwardRef } from 'react';\nimport ClearButton from '../ClearButton';\nimport { useToken } from '../../behaviors/token';\nimport { isFunction } from '../../utils';\nvar InteractiveToken = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var active = _ref.active,\n      children = _ref.children,\n      className = _ref.className,\n      onRemove = _ref.onRemove,\n      tabIndex = _ref.tabIndex,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, props, {\n    className: cx('rbt-token', 'rbt-token-removeable', {\n      'rbt-token-active': !!active\n    }, className),\n    ref: ref,\n    tabIndex: tabIndex || 0\n  }), children, /*#__PURE__*/React.createElement(ClearButton, {\n    className: \"rbt-token-remove-button\",\n    label: \"Remove\",\n    onClick: onRemove,\n    tabIndex: -1\n  }));\n});\n\nvar StaticToken = function StaticToken(_ref2) {\n  var children = _ref2.children,\n      className = _ref2.className,\n      disabled = _ref2.disabled,\n      href = _ref2.href;\n  var classnames = cx('rbt-token', {\n    'rbt-token-disabled': disabled\n  }, className);\n\n  if (href && !disabled) {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      className: classnames,\n      href: href\n    }, children);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classnames\n  }, children);\n};\n/**\n * Individual token component, generally displayed within the\n * `TypeaheadInputMulti` component, but can also be rendered on its own.\n */\n\n\nvar Token = function Token(_ref3) {\n  var children = _ref3.children,\n      option = _ref3.option,\n      readOnly = _ref3.readOnly,\n      props = _objectWithoutProperties(_ref3, _excluded2);\n\n  var _useToken = useToken(_objectSpread(_objectSpread({}, props), {}, {\n    option: option\n  })),\n      ref = _useToken.ref,\n      tokenProps = _objectWithoutProperties(_useToken, _excluded3);\n\n  var child = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rbt-token-label\"\n  }, children);\n  return !props.disabled && !readOnly && isFunction(tokenProps.onRemove) ? /*#__PURE__*/React.createElement(InteractiveToken, _extends({}, props, tokenProps, {\n    ref: ref\n  }), child) : /*#__PURE__*/React.createElement(StaticToken, props, child);\n};\n\nexport default Token;","map":null,"metadata":{},"sourceType":"module"}