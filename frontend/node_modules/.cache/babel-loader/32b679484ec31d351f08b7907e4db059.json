{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"children\", \"className\", \"inputClassName\", \"inputRef\", \"placeholder\", \"referenceElementRef\", \"selected\"];\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\n\nimport cx from 'classnames';\nimport React from 'react';\nimport Hint from '../Hint';\nimport Input from '../Input';\nimport { isSelectable, propsWithBsClassName } from '../../utils';\n\nvar TypeaheadInputMulti = /*#__PURE__*/function (_React$Component) {\n  _inherits(TypeaheadInputMulti, _React$Component);\n\n  var _super = _createSuper(TypeaheadInputMulti);\n\n  function TypeaheadInputMulti() {\n    var _this;\n\n    _classCallCheck(this, TypeaheadInputMulti);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"wrapperRef\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"_input\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"getInputRef\", function (input) {\n      _this._input = input;\n\n      _this.props.inputRef(input);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleContainerClickOrFocus\", function (e) {\n      // Don't focus the input if it's disabled.\n      if (_this.props.disabled) {\n        e.currentTarget.blur();\n        return;\n      }\n\n      var inputNode = _this._input;\n\n      if (!inputNode || // Ignore if the clicked element is a child of the container, ie: a token\n      // or the input itself.\n      e.currentTarget.contains(e.target) && e.currentTarget !== e.target) {\n        return;\n      }\n\n      if (isSelectable(inputNode)) {\n        // Move cursor to the end if the user clicks outside the actual input.\n        inputNode.selectionStart = inputNode.value.length;\n      }\n\n      inputNode.focus();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleKeyDown\", function (e) {\n      var _this$props = _this.props,\n          onKeyDown = _this$props.onKeyDown,\n          selected = _this$props.selected,\n          value = _this$props.value;\n\n      if (e.key === 'Backspace' && selected.length && !value) {\n        // Prevent browser from going back.\n        e.preventDefault(); // If the input is selected and there is no text, focus the last\n        // token when the user hits backspace.\n\n        if (_this.wrapperRef.current) {\n          var children = _this.wrapperRef.current.children;\n          var lastToken = children[children.length - 2];\n          lastToken && lastToken.focus();\n        }\n      }\n\n      onKeyDown && onKeyDown(e);\n    });\n\n    return _this;\n  }\n\n  _createClass(TypeaheadInputMulti, [{\n    key: \"render\",\n    value: function render() {\n      var _propsWithBsClassName = propsWithBsClassName(this.props),\n          children = _propsWithBsClassName.children,\n          className = _propsWithBsClassName.className,\n          inputClassName = _propsWithBsClassName.inputClassName,\n          inputRef = _propsWithBsClassName.inputRef,\n          placeholder = _propsWithBsClassName.placeholder,\n          referenceElementRef = _propsWithBsClassName.referenceElementRef,\n          selected = _propsWithBsClassName.selected,\n          props = _objectWithoutProperties(_propsWithBsClassName, _excluded);\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: cx('rbt-input-multi', {\n          disabled: props.disabled\n        }, className),\n        onClick: this._handleContainerClickOrFocus,\n        onFocus: this._handleContainerClickOrFocus,\n        ref: referenceElementRef,\n        tabIndex: -1\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rbt-input-wrapper\",\n        ref: this.wrapperRef\n      }, children, /*#__PURE__*/React.createElement(Hint, null, /*#__PURE__*/React.createElement(Input, _extends({}, props, {\n        className: inputClassName,\n        onKeyDown: this._handleKeyDown,\n        placeholder: selected.length ? '' : placeholder,\n        ref: this.getInputRef,\n        style: {\n          backgroundColor: 'transparent',\n          border: 0,\n          boxShadow: 'none',\n          cursor: 'inherit',\n          outline: 'none',\n          padding: 0,\n          width: '100%',\n          zIndex: 1\n        }\n      })))));\n    }\n  }]);\n\n  return TypeaheadInputMulti;\n}(React.Component);\n\nexport default TypeaheadInputMulti;","map":null,"metadata":{},"sourceType":"module"}