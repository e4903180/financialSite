{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"activeIndex\", \"id\", \"isFocused\", \"isMenuShown\", \"multiple\", \"onClick\", \"onFocus\", \"placeholder\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport cx from 'classnames';\nimport getMenuItemId from './getMenuItemId';\nimport hasOwnProperty from './hasOwnProperty';\n\nvar getInputProps = function getInputProps(_ref) {\n  var activeIndex = _ref.activeIndex,\n      id = _ref.id,\n      isFocused = _ref.isFocused,\n      isMenuShown = _ref.isMenuShown,\n      multiple = _ref.multiple,\n      onClick = _ref.onClick,\n      onFocus = _ref.onFocus,\n      placeholder = _ref.placeholder,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return function () {\n    var _cx;\n\n    var inputProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var className = hasOwnProperty(inputProps, 'className') ? inputProps.className : undefined;\n\n    var props = _objectSpread(_objectSpread(_objectSpread({\n      // These props can be overridden by values in `inputProps`.\n      autoComplete: 'off',\n      placeholder: placeholder,\n      type: 'text'\n    }, inputProps), rest), {}, {\n      'aria-activedescendant': activeIndex >= 0 ? getMenuItemId(id, activeIndex) : undefined,\n      'aria-autocomplete': 'both',\n      'aria-expanded': isMenuShown,\n      'aria-haspopup': 'listbox',\n      'aria-owns': isMenuShown ? id : undefined,\n      className: cx((_cx = {}, _defineProperty(_cx, className || '', !multiple), _defineProperty(_cx, \"focus\", isFocused), _cx)),\n      onClick: onClick,\n      onFocus: onFocus,\n      // Comboboxes are single-select by definition:\n      // https://www.w3.org/TR/wai-aria-practices-1.1/#combobox\n      role: 'combobox'\n    });\n\n    if (!multiple) {\n      return props;\n    }\n\n    return _objectSpread(_objectSpread({}, props), {}, {\n      'aria-autocomplete': 'list',\n      'aria-expanded': undefined,\n      inputClassName: className,\n      role: undefined\n    });\n  };\n};\n\nexport default getInputProps;","map":null,"metadata":{},"sourceType":"module"}