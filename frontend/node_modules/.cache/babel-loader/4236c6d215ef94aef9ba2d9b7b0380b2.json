{"ast":null,"code":"import _slicedToArray from \"/home/cosbi/financialSite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/cosbi/financialSite/frontend/src/component/databasePage/newsItem/newsComp.js\";\nimport { Backdrop, Button, CircularProgress } from '@mui/material';\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport NewsItem from './newsItem';\nimport { config } from '../../../constant';\n\nfunction NewsComp() {\n  var _this = this;\n\n  var Today = new Date();\n  var todayDate = Today.getFullYear() + \"-\" + String(Today.getMonth() + 1).padStart(2, '0') + \"-\" + String(Today.getDate()).padStart(2, '0');\n\n  var _useState = useState(\"news\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      type = _useState2[0],\n      setType = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data0 = _useState6[0],\n      setData0 = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      page0 = _useState8[0],\n      setPage0 = _useState8[1];\n\n  var _useState9 = useState(10),\n      _useState10 = _slicedToArray(_useState9, 2),\n      pageSize0 = _useState10[0],\n      setPageSize0 = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      startDate = _useState12[0],\n      setStartDate = _useState12[1];\n\n  var _useState13 = useState(\"全部\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      category = _useState14[0],\n      setCategory = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      dataNews = _useState16[0],\n      setDataNews = _useState16[1];\n\n  var columns_summary_news = [{\n    field: \"category\",\n    headerName: \"新聞類別\",\n    flex: 1,\n    headerAlign: 'center',\n    align: 'center'\n  }, {\n    field: \"todayQuantity\",\n    headerName: todayDate + \"新聞數量\",\n    flex: 1,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: function renderCell(rowData) {\n      return /*#__PURE__*/React.createElement(Button, {\n        variant: \"text\",\n        onClick: function onClick() {\n          return buttonNewsHandle(\"today\", rowData[\"row\"][\"category\"]);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 24\n        }\n      }, rowData.value);\n    }\n  }, {\n    field: \"pastQuantity\",\n    headerName: todayDate + \"前新聞數量\",\n    flex: 1,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: function renderCell(rowData) {\n      return /*#__PURE__*/React.createElement(Button, {\n        variant: \"text\",\n        onClick: function onClick() {\n          return buttonNewsHandle(\"past\", rowData[\"row\"][\"category\"]);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 24\n        }\n      }, rowData.value);\n    }\n  }];\n\n  var buttonNewsHandle = function buttonNewsHandle(date, buttonCategory) {\n    setLoading(true);\n    setType(\"news\");\n\n    if (date === \"today\") {\n      setStartDate(todayDate);\n    } else if (date === \"past\") {\n      setStartDate(\"2023-01-01\");\n    }\n\n    setCategory(buttonCategory);\n    axios.get(config[\"rootApiIP\"] + \"/data/news_search_\".concat(date), {\n      params: {\n        \"date\": todayDate,\n        \"category\": buttonCategory\n      }\n    }).then(function (res) {\n      setDataNews(res.data);\n      setLoading(false);\n      window.scrollTo({\n        left: 0,\n        top: document.body.scrollHeight,\n        behavior: \"smooth\"\n      });\n    }).catch(function (res) {\n      if (res.response.data === \"Session expired\") window.location.reload();\n      setLoading(false);\n    });\n  };\n\n  useEffect(function () {\n    axios.get(config[\"rootApiIP\"] + \"/data/news_summary\", {\n      params: {\n        \"date\": todayDate\n      }\n    }).then(function (res) {\n      setData0(res.data);\n    }).catch(function (res) {\n      if (res.response.data === \"Session expired\") window.location.reload();\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Backdrop, {\n    sx: {\n      color: '#fff',\n      zIndex: function zIndex(theme) {\n        return theme.zIndex.drawer + 1;\n      }\n    },\n    open: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"\\u8CC7\\u6599\\u8F09\\u5165\\u4E2D\\u2003\", /*#__PURE__*/React.createElement(CircularProgress, {\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row pt-3 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, \"\\u65B0\\u805E\\u8CC7\\u6599\\u5EAB\\u7E3D\\u89BD\"), /*#__PURE__*/React.createElement(DataGrid, {\n    columns: columns_summary_news,\n    rows: data0,\n    page: page0,\n    onPageChange: function onPageChange(newPage) {\n      return setPage0(newPage);\n    },\n    pageSize: pageSize0,\n    onPageSizeChange: function onPageSizeChange(newPageSize) {\n      return setPageSize0(newPageSize);\n    },\n    rowsPerPageOptions: [5, 10, 20],\n    getRowId: function getRowId(row) {\n      return row.ID;\n    },\n    components: {\n      Toolbar: GridToolbar\n    },\n    componentsProps: {\n      toolbar: {\n        showQuickFilter: true\n      }\n    },\n    pagination: true,\n    autoHeight: true,\n    disableColumnMenu: true,\n    disableColumnSelector: true,\n    disableDensitySelector: true,\n    disableColumnFilter: true,\n    disableSelectionOnClick: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, \"\\u65B0\\u805E\\u8CC7\\u6599\\u5EAB\\u67E5\\u8A62\"), /*#__PURE__*/React.createElement(NewsItem, {\n    setLoading: setLoading,\n    data: dataNews,\n    setData: setDataNews,\n    startDate: startDate,\n    endDate: todayDate,\n    category: category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default NewsComp;","map":{"version":3,"sources":["/home/cosbi/financialSite/frontend/src/component/databasePage/newsItem/newsComp.js"],"names":["Backdrop","Button","CircularProgress","DataGrid","GridToolbar","axios","React","useEffect","useState","NewsItem","config","NewsComp","Today","Date","todayDate","getFullYear","String","getMonth","padStart","getDate","type","setType","loading","setLoading","data0","setData0","page0","setPage0","pageSize0","setPageSize0","startDate","setStartDate","category","setCategory","dataNews","setDataNews","columns_summary_news","field","headerName","flex","headerAlign","align","renderCell","rowData","buttonNewsHandle","value","date","buttonCategory","get","params","then","res","data","window","scrollTo","left","top","document","body","scrollHeight","behavior","catch","response","location","reload","color","zIndex","theme","drawer","newPage","newPageSize","row","ID","Toolbar","toolbar","showQuickFilter"],"mappings":"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","sourcesContent":["import { Backdrop, Button, CircularProgress } from '@mui/material';\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport NewsItem from './newsItem';\nimport { config } from '../../../constant';\n\nfunction NewsComp() {\n    var Today = new Date()\n    const todayDate = Today.getFullYear() + \"-\" + String(Today.getMonth()+1).padStart(2, '0') + \"-\" + String(Today.getDate()).padStart(2, '0')\n\n    const [type, setType] = useState(\"news\")\n    const [loading, setLoading] = useState(false)\n    const [data0, setData0] = useState([])\n    const [page0, setPage0] = useState(0)\n    const [pageSize0, setPageSize0] = useState(10)\n    const [startDate, setStartDate] = useState(\"\")\n    const [category, setCategory] = useState(\"全部\")\n\n    const [dataNews, setDataNews] = useState([])\n\n    const columns_summary_news = [\n        { field: \"category\", headerName : \"新聞類別\", flex: 1, headerAlign: 'center', align: 'center' },\n        { field: \"todayQuantity\", headerName : todayDate + \"新聞數量\", flex: 1, headerAlign: 'center', align: 'center', renderCell : \n            rowData => <Button variant = \"text\" onClick = { () => buttonNewsHandle(\"today\", rowData[\"row\"][\"category\"]) }>{rowData.value}</Button>\n        },\n        { field: \"pastQuantity\", headerName : todayDate + \"前新聞數量\", flex: 1, headerAlign: 'center', align: 'center', renderCell : \n            rowData => <Button variant = \"text\" onClick = { () => buttonNewsHandle(\"past\", rowData[\"row\"][\"category\"]) }>{rowData.value}</Button>\n        }\n    ];\n\n    const buttonNewsHandle = (date, buttonCategory) => {\n        setLoading(true)\n        setType(\"news\")\n\n        if (date === \"today\"){\n            setStartDate(todayDate)\n        }else if (date === \"past\"){\n            setStartDate(\"2023-01-01\")\n        }\n\n        setCategory(buttonCategory)\n\n        axios.get(config[\"rootApiIP\"] + `/data/news_search_${date}`, { params : {\n            \"date\" : todayDate,\n            \"category\" : buttonCategory\n        }})\n        .then((res) => {\n            setDataNews(res.data)\n            setLoading(false)\n            window.scrollTo({\n                left : 0, \n                top : document.body.scrollHeight,\n                behavior : \"smooth\"\n            })\n        })\n        .catch((res) => {\n            if(res.response.data === \"Session expired\") window.location.reload()\n            setLoading(false)\n        })\n    }\n\n    useEffect(() => {\n        axios.get(config[\"rootApiIP\"] + \"/data/news_summary\", {params :{\n            \"date\" : todayDate,\n        }})\n        .then((res) => {\n            setData0(res.data)\n        })\n        .catch((res) => {\n            if(res.response.data === \"Session expired\") window.location.reload()\n        })\n    }, [])\n\n    return (\n        <>\n            <Backdrop\n                sx = {{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n                open = { loading }\n            >\n                資料載入中&emsp;\n                <CircularProgress color = \"inherit\" />\n            </Backdrop>\n            \n            <div className = 'row pt-3 mx-auto'>\n                <div className = 'col-md-4 mx-auto'>\n                    <h3 className = \"text-center\">新聞資料庫總覽</h3>\n                    <DataGrid\n                        columns = { columns_summary_news }\n                        rows = { data0 }\n                        page = { page0 }\n                        onPageChange={(newPage) => setPage0(newPage)}\n                        pageSize = { pageSize0 }\n                        onPageSizeChange={ (newPageSize) => setPageSize0(newPageSize) }\n                        rowsPerPageOptions = {[5, 10, 20]}\n                        getRowId = { row => row.ID }\n                        components = {{ Toolbar: GridToolbar }}\n                        componentsProps = {{ toolbar: { showQuickFilter: true },}}\n                        pagination\n                        autoHeight\n                        disableColumnMenu\n                        disableColumnSelector\n                        disableDensitySelector\n                        disableColumnFilter\n                        disableSelectionOnClick = { true }\n                    />\n                </div>\n\n                <div className = 'col-md-6 mx-auto'>\n                    <h3 className = \"text-center\">新聞資料庫查詢</h3>\n\n                    <NewsItem \n                        setLoading = { setLoading } \n                        data = { dataNews } \n                        setData = { setDataNews } \n                        startDate = { startDate } \n                        endDate = { todayDate }\n                        category = { category }\n                    />\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default NewsComp;"]},"metadata":{},"sourceType":"module"}