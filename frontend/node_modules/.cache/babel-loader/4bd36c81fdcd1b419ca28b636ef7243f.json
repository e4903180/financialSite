{"ast":null,"code":"import _readOnlyError from \"/home/cosbi/financialSite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\nimport axios from 'axios';\nimport { createContext } from 'react';\nimport socketio from 'socket.io-client';\nimport { rootApiIP, WebSocketIP } from './constant';\nvar ws = socketio.connect(WebSocketIP, {\n  extraHeaders: {\n    \"username\": \"123\"\n  }\n});\nvar WSContext = createContext();\n\nfunction Auth() {\n  axios.get(rootApiIP + \"/data/username\").then(function (res) {\n    socketio.connect(WebSocketIP, {\n      extraHeaders: {\n        \"username\": res.data\n      }\n    }), _readOnlyError(\"ws\");\n  }).catch(function (res) {});\n}\n\nAuth();\nexport { ws, WSContext };","map":{"version":3,"sources":["/home/cosbi/financialSite/frontend/src/webSocket.js"],"names":["axios","createContext","socketio","rootApiIP","WebSocketIP","ws","connect","extraHeaders","WSContext","Auth","get","then","res","data","catch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,YAAvC;AACA,IAAMC,EAAE,GAAGH,QAAQ,CAACI,OAAT,CAAiBF,WAAjB,EAA8B;AACrCG,EAAAA,YAAY,EAAG;AACX,gBAAa;AADF;AADsB,CAA9B,CAAX;AAKA,IAAMC,SAAS,GAAGP,aAAa,EAA/B;;AAEA,SAASQ,IAAT,GAAe;AACXT,EAAAA,KAAK,CAACU,GAAN,CAAUP,SAAS,GAAG,gBAAtB,EACCQ,IADD,CACM,UAAAC,GAAG,EAAI;AACJV,IAAAA,QAAQ,CAACI,OAAT,CAAiBF,WAAjB,EAA8B;AAC/BG,MAAAA,YAAY,EAAG;AACX,oBAAaK,GAAG,CAACC;AADN;AADgB,KAA9B,CAAL;AAKH,GAPD,EAOGC,KAPH,CAOS,UAAAF,GAAG,EAAI,CACf,CARD;AASH;;AAEDH,IAAI;AAEJ,SAAQJ,EAAR,EAAYG,SAAZ","sourcesContent":["import axios from 'axios'\nimport { createContext } from 'react'\nimport socketio from 'socket.io-client'\nimport { rootApiIP, WebSocketIP } from './constant'\nconst ws = socketio.connect(WebSocketIP, {\n    extraHeaders : {\n        \"username\" : \"123\"\n    }\n})\nconst WSContext = createContext()\n\nfunction Auth(){\n    axios.get(rootApiIP + \"/data/username\")\n    .then(res => {\n        ws = socketio.connect(WebSocketIP, {\n            extraHeaders : {\n                \"username\" : res.data\n            }\n        })\n    }).catch(res => {\n    })\n}\n\nAuth()\n\nexport{ ws, WSContext }"]},"metadata":{},"sourceType":"module"}