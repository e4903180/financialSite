{"ast":null,"code":"import _slicedToArray from \"/home/cosbi/financialSite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/cosbi/financialSite/frontend/src/component/registerPage/registerComp.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { rootApiIP } from '../../constant';\naxios.defaults.withCredentials = true;\n\nfunction RegisterComp() {\n  var nav = useNavigate();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userName = _useState4[0],\n      setUsername = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      confirmPassword = _useState10[0],\n      set_confirmPassword = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      nameError = _useState12[0],\n      setNameError = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      userNameError = _useState14[0],\n      setUserNameError = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      emailError = _useState16[0],\n      setemailError = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      passwordError = _useState18[0],\n      setpasswordError = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      confirmpasswordError = _useState20[0],\n      setconfirmpasswordError = _useState20[1];\n\n  function register() {\n    axios.post(rootApiIP + \"/user/register\", {\n      name: name,\n      userName: userName,\n      email: email,\n      password: password\n    }).then(function (res) {\n      alert(\"Register successfully\");\n      nav(\"/login\");\n    }).catch(function (err) {\n      if (err.response.status === 401) {\n        alert(err.response.data);\n      } else {\n        alert(\"error\");\n      }\n    });\n  }\n\n  ;\n  useEffect(function () {\n    function checkEmailFormat(email) {\n      var pattern = new RegExp(/^([A-Za-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{3,6})$/); //eslint-disable-line\n\n      if (pattern.test(email)) {\n        setemailError(false);\n      } else {\n        if (email !== \"\") setemailError(true);else setemailError(false);\n      }\n\n      ;\n    }\n\n    ;\n\n    function checkpassword(x) {\n      var pattern = new RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{6,15}$/); //eslint-disable-line\n\n      if (pattern.test(x)) {\n        if (password !== confirmPassword) {\n          setconfirmpasswordError(true);\n        } else {\n          setconfirmpasswordError(false);\n        }\n\n        ;\n        setpasswordError(false);\n      } else {\n        if (password !== \"\") setpasswordError(true);else setpasswordError(false);\n      }\n\n      ;\n    }\n\n    ;\n\n    function checkConfirmpassword(y) {\n      if (confirmPassword !== password) {\n        setconfirmpasswordError(true);\n      } else {\n        setconfirmpasswordError(false);\n      }\n\n      ;\n    }\n\n    ;\n\n    function checkButton() {\n      if (emailError === false && passwordError === false && confirmpasswordError === false && nameError === false && name !== \"\" && userName !== \"\" && email !== \"\" && password !== \"\" && confirmPassword !== \"\") {\n        document.getElementById(\"registerButton\").disabled = false;\n      } else {\n        document.getElementById(\"registerButton\").disabled = true;\n      }\n    }\n\n    ;\n\n    function checkName() {\n      if (name.length > 20) {\n        setNameError(true);\n      } else {\n        setNameError(false);\n      }\n    }\n\n    function checkUserName() {\n      if (userName.length > 20) {\n        setUserNameError(true);\n      } else {\n        setUserNameError(false);\n      }\n    }\n\n    checkName(name);\n    checkUserName(userName);\n    checkEmailFormat(email);\n    checkpassword(password);\n    checkConfirmpassword(confirmPassword);\n    checkButton();\n  });\n\n  function submit(e) {\n    e.preventDefault();\n    register();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid h-100 d-flex flex-column justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-5 p-3\",\n    style: {\n      border: \"3px solid black\",\n      borderRadius: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"row g-3 needs-validation\",\n    onSubmit: submit,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-center display-4 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }, \"Register\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }, \"* is required\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 33\n    }\n  }, \"Name \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 62\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"name\",\n    onChange: function onChange(event) {\n      return setName(event.target.value);\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }, \"Length cannot over 20\"), nameError ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 47\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 72\n    }\n  }, \"Name is too long\"), \" \") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 133\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 33\n    }\n  }, \"Username \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 69\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"account\",\n    onChange: function onChange(event) {\n      return setUsername(event.target.value);\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  }, \"Length cannot over 20\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 33\n    }\n  }, \"Email \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 64\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"email\",\n    onChange: function onChange(event) {\n      return setEmail(event.target.value);\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 33\n    }\n  }), emailError ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 48\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 73\n    }\n  }, \"Email format error\"), \" \") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 136\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 33\n    }\n  }, \"Password \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 70\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    id: \"password\",\n    onChange: function onChange(event) {\n      return setPassword(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 33\n    }\n  }, \"Password length must not be less than 6, and over 15\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 33\n    }\n  }, \"Password must contain an Uppper case, and a Lower case\"), passwordError ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 51\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 76\n    }\n  }, \"Password format error\"), \" \") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 142\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"confirmPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 33\n    }\n  }, \"Confirm Password \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 85\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    id: \"confirmPassword\",\n    onChange: function onChange(event) {\n      return set_confirmPassword(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 33\n    }\n  }), confirmpasswordError ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 58\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 83\n    }\n  }, \"Confirm password doesn't match\"), \" \") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 158\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-grid px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"registerButton\",\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 29\n    }\n  }, \"Submit\"))))));\n}\n\nexport default RegisterComp;","map":{"version":3,"sources":["/home/cosbi/financialSite/frontend/src/component/registerPage/registerComp.js"],"names":["React","useEffect","useState","useNavigate","axios","rootApiIP","defaults","withCredentials","RegisterComp","nav","name","setName","userName","setUsername","email","setEmail","password","setPassword","confirmPassword","set_confirmPassword","nameError","setNameError","userNameError","setUserNameError","emailError","setemailError","passwordError","setpasswordError","confirmpasswordError","setconfirmpasswordError","register","post","then","res","alert","catch","err","response","status","data","checkEmailFormat","pattern","RegExp","test","checkpassword","x","checkConfirmpassword","y","checkButton","document","getElementById","disabled","checkName","length","checkUserName","submit","e","preventDefault","border","borderRadius","color","event","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { rootApiIP } from '../../constant'\naxios.defaults.withCredentials = true;\n\nfunction RegisterComp() {\n    const nav = useNavigate()\n    const [name, setName] = useState(\"\");\n    const [userName, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, set_confirmPassword] = useState(\"\");\n\n    const [nameError, setNameError] = useState(false)\n    const [userNameError, setUserNameError] = useState(false)\n    const [emailError, setemailError] = useState(false);\n    const [passwordError, setpasswordError] = useState(false);\n    const [confirmpasswordError, setconfirmpasswordError] = useState(false);\n\n    function register(){\n        axios.post(rootApiIP + \"/user/register\", {\n            name : name,\n            userName : userName,\n            email : email,\n            password : password\n        }).then(res => {\n            alert(\"Register successfully\")\n            nav(\"/login\");\n        }).catch(err => {\n            if(err.response.status === 401){\n                alert(err.response.data)\n            }else{\n                alert(\"error\")\n            }\n        });\n    };\n\n    useEffect(() => {\n        function checkEmailFormat(email){\n            var pattern = new RegExp(/^([A-Za-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{3,6})$/);//eslint-disable-line\n    \n            if(pattern.test(email)){\n                setemailError(false)\n            }else{\n                if(email !== \"\") setemailError(true)\n                else setemailError(false)\n            };\n        };\n\n        function checkpassword(x){\n            var pattern = new RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{6,15}$/);//eslint-disable-line\n    \n            if(pattern.test(x)){\n                if(password !== confirmPassword){\n                    setconfirmpasswordError(true)\n                }else{\n                    setconfirmpasswordError(false)\n                };\n                setpasswordError(false)\n            }else{\n                if(password !== \"\") setpasswordError(true)\n                else setpasswordError(false)\n            };\n        };\n\n        function checkConfirmpassword(y){\n            if(confirmPassword !== password){\n                setconfirmpasswordError(true)\n            }else{\n                setconfirmpasswordError(false)\n            };\n        };\n\n        function checkButton(){\n            if(emailError === false && passwordError === false && confirmpasswordError === false && nameError === false && name !== \"\" && userName !== \"\" && email !== \"\" && password !== \"\" && confirmPassword !== \"\"){\n                document.getElementById(\"registerButton\").disabled = false\n            }else{\n                document.getElementById(\"registerButton\").disabled = true\n            }\n        };\n\n        function checkName(){\n            if(name.length > 20){\n                setNameError(true)\n            }else{\n                setNameError(false)\n            }\n        }\n\n        function checkUserName(){\n            if(userName.length > 20){\n                setUserNameError(true)\n            }else{\n                setUserNameError(false)\n            }\n        }\n\n        checkName(name)\n        checkUserName(userName)\n        checkEmailFormat(email);\n        checkpassword(password);\n        checkConfirmpassword(confirmPassword);\n        checkButton();\n    })\n\n    function submit(e){\n        e.preventDefault()\n\n        register();\n    }\n\n    return (\n        <div className = 'container-fluid h-100 d-flex flex-column justify-content-center' >\n            <div className = \"row justify-content-center\">\n                <div className = \"col-sm-5 p-3\" style = {{ border : \"3px solid black\", borderRadius: \"10px\" }}>\n                    <form className = \"row g-3 needs-validation\" onSubmit = { submit } noValidate>\n                        <div className = \"form-row\">\n                            <h2 className = \"text-center display-4 mt-2\">Register</h2>\n                        </div>\n\n                        <div className = \"form-row px-4\">\n                            <p style = {{ color : \"red\" }}>* is required</p>\n                            <div className = \"form-group\">\n                                <label htmlFor = \"name\">Name <span style = {{ color : \"red\" }}>*</span></label>\n                                <input type = \"text\" className = \"form-control\" id = \"name\" onChange = { event => setName(event.target.value) } required/>\n                                <div className = \"form-text\">Length cannot over 20</div>\n                                { nameError ? <div className = \"item\"> <p style = {{ color : \"red\" }}>Name is too long</p> </div> : <div></div> }\n                            </div>\n                        </div>\n\n                        <div className = \"form-row px-4\">\n                            <div className = \"form-group\">\n                                <label htmlFor = \"account\">Username <span style = {{ color : \"red\" }}>*</span></label>\n                                <input type = \"text\" className = \"form-control\" id = \"account\" onChange = { event => setUsername(event.target.value) } required/>\n                                <div className = \"form-text\">Length cannot over 20</div>\n                            </div>\n                        </div>\n\n                        <div className = \"form-row px-4\">\n                            <div className = \"form-group\">\n                                <label htmlFor = \"email\">Email <span style = {{ color : \"red\" }}>*</span></label>\n                                <input type = \"text\" className = \"form-control\" id = \"email\" onChange = { event => setEmail(event.target.value) } required/>\n                                { emailError ? <div className = \"item\"> <p style = {{ color : \"red\" }}>Email format error</p> </div> : <div></div> }\n                            </div>\n                        </div>\n\n                        <div className = \"form-row px-4\">\n                            <div className = \"form-group\">\n                                <label htmlFor = \"password\">Password <span style = {{ color : \"red\" }}>*</span></label>\n                                <input type = \"password\" className = \"form-control\" id = \"password\" onChange = { event => setPassword(event.target.value) }/>\n                                <div className = \"form-text\">Password length must not be less than 6, and over 15</div>\n                                <div className = \"form-text\">Password must contain an Uppper case, and a Lower case</div>\n                                { passwordError ? <div className = \"item\"> <p style = {{ color : \"red\" }}>Password format error</p> </div> : <div></div> }\n                            </div>\n                        </div>\n\n                        <div className = \"form-row px-4\">\n                            <div className = \"form-group\">\n                                <label htmlFor = \"confirmPassword\">Confirm Password <span style = {{ color : \"red\" }}>*</span></label>\n                                <input type = \"password\" className = \"form-control\" id = \"confirmPassword\" onChange = { event => set_confirmPassword(event.target.value) }/>\n                                { confirmpasswordError ? <div className = \"item\"> <p style = {{ color : \"red\" }}>Confirm password doesn't match</p> </div> : <div></div> }\n                            </div>\n                        </div>\n\n                        <div className = \"d-grid px-4\">\n                            <button id = \"registerButton\" type = \"submit\" className = \"btn btn-primary\" disabled>Submit</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default RegisterComp;"]},"metadata":{},"sourceType":"module"}