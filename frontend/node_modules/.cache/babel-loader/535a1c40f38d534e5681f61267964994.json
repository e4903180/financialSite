{"ast":null,"code":"import _slicedToArray from \"/home/cosbi/financialSite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport { rootApiIP } from '../../constant';\nimport PricingComp from './pricingComp';\nimport { priceInit, pricing1, pricing2, pricing3, pricing4 } from './pricingExplain';\n\nfunction StockPricingStratagyComp() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      stockNum = _useState2[0],\n      setStockNum = _useState2[1];\n\n  var _useState3 = useState(\"?\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      year = _useState4[0],\n      setYear = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      autocom = _useState6[0],\n      setAutocom = _useState6[1];\n\n  var _useState7 = useState(priceInit),\n      _useState8 = _slicedToArray(_useState7, 2),\n      price = _useState8[0],\n      setPrice = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      inputError = _useState12[0],\n      setInputError = _useState12[1];\n\n  var _useState13 = useState({}),\n      _useState14 = _slicedToArray(_useState13, 2),\n      table_data1 = _useState14[0],\n      set_table_data1 = _useState14[1];\n\n  useEffect(function () {\n    axios.get(rootApiIP + \"/data/autoCom\").then(function (res) {\n      setAutocom(res.data);\n    }).catch(function (res) {\n      if (res.response.data === \"Session expired\") window.location.reload();\n    });\n  }, []);\n\n  function submit(e) {\n    e.preventDefault();\n    setLoading(true);\n\n    if (autocom.map(function (element) {\n      return element.stock_num_name;\n    }).includes(document.getElementsByClassName('rbt-input-main form-control rbt-input')[0].value) === true && year !== \"?\") {\n      setInputError(false);\n      axios.post(rootApiIP + \"/data/pricing\", {\n        \"stockNum\": stockNum[0][\"stock_num_name\"].slice(0, 4),\n        \"year\": year\n      }).then(function (res) {\n        setPrice(res.data);\n        setLoading(false);\n      }).catch(function (res) {\n        if (res.response.data === \"Session expired\") window.location.reload();\n        setLoading(false);\n      });\n    } else {\n      setInputError(true);\n      setLoading(false);\n    }\n  } // return (\n  //     <>\n  //         <div className = 'row mx-auto py-3' style = {{ width : \"50vw\" }}>\n  //             <h3 className = \"display-6 text-center\">股票定價</h3>\n  //             <form onSubmit = { submit }>\n  //                 <div className = 'form-group row'>\n  //                     <label htmlFor = \"stockNum_or_Name\" className = \"col-md-3 col-form-label text-center\">股票代號&名稱:&emsp;</label>\n  //                     <div className = 'col-md-3'>\n  //                         <Typeahead\n  //                             id = \"stockNum_or_Name\"\n  //                             labelKey = \"stock_num_name\"\n  //                             onChange = { setStockNum }\n  //                             options = { autocom }\n  //                             placeholder = \"請輸入股票代號或名稱\"\n  //                             selected = { stockNum }\n  //                         />\n  //                     </div>\n  //                     <label htmlFor = \"year\" className = \"col-md-3 col-form-label text-center\">歷史幾年資料:</label>\n  //                     <div className = 'col-md-3'>\n  //                         <select id = \"year\" className = \"form-select\" onChange = {e => setYear(e.target.value)}>\n  //                             <option value = \"\">請選擇年份</option>\n  //                             <option value = \"1\">1</option>\n  //                             <option value = \"2\">2</option>\n  //                             <option value = \"3\">3</option>\n  //                             <option value = \"4\">4</option>\n  //                             <option value = \"5\">5</option>\n  //                             <option value = \"6\">6</option>\n  //                             <option value = \"7\">7</option>\n  //                             <option value = \"8\">8</option>\n  //                             <option value = \"9\">9</option>\n  //                             <option value = \"10\">10</option>\n  //                         </select>\n  //                     </div>\n  //                 </div>\n  //                 <div className = 'form-group row py-3'>\n  //                     <div className = 'col-md-12 text-center'>\n  //                         { loading ? <button type = \"submit\" className = \"btn btn-primary\" style = {{ width : \"100px\" }} disabled><span className = \"spinner-border spinner-border-sm\" role = \"status\" aria-hidden = \"true\"></span></button> : <button type = \"submit\" className = \"btn btn-primary\" style = {{ width : \"100px\" }}>搜尋</button> }\n  //                     </div>\n  //                 </div>\n  //             </form>\n  //             { inputError ? <p className = 'text-center' style = {{ color : \"red\" }}>股票代號&名稱格式錯誤 或 年份錯誤</p> : <></> }\n  //         </div>\n  //         <div className = 'row mx-auto py-3' style = {{ width : \"90%\" }}>\n  //             <div className = 'col-md-12'>\n  //                 <div className = 'card'>\n  //                     <div className = 'card-body'>\n  //                         <h3 className = 'card-title'>最新價格: { price[\"NewPrice\"] }</h3>\n  //                     </div>\n  //                 </div>\n  //             </div>\n  //         </div>\n  //         <div className = 'row mx-auto py-3' style = {{ width : \"90%\" }}>\n  //             <div className = 'col-md-12'>\n  //                 <PricingComp pricingName = \"股利法\" pricingExplain = { pricing1(year) } lowPrice = { price[\"cheap1\"] } resonablePrice = { price[\"reasonable1\"] } highPrice = { price[\"expensive1\"] } NewPrice = { price[\"NewPrice\"] } table_data = { table_data1 }/>\n  //             </div>\n  //             {/* <div className = 'col-md-6'>\n  //                 <PricingComp pricingName = \"高低價法\" pricingExplain = { pricing2(year) } lowPrice = { price[\"cheap2\"] } resonablePrice = { price[\"reasonable2\"] } highPrice = { price[\"expensive2\"] } NewPrice = { price[\"NewPrice\"] }/>\n  //             </div> */}\n  //         </div>\n  //         {/* <div className = 'row mx-auto py-3' style = {{ width : \"90%\" }}>\n  //             <div className = 'col-md-6'>\n  //                 <PricingComp pricingName = \"本益比法\" pricingExplain = { pricing3(year) } lowPrice = { price[\"cheap3\"] } resonablePrice = { price[\"reasonable3\"] } highPrice = { price[\"expensive3\"] } NewPrice = { price[\"NewPrice\"] }/>\n  //             </div>\n  //             <div className = 'col-md-6'>\n  //                 <PricingComp pricingName = \"本淨比法\" pricingExplain = { pricing4(year) } lowPrice = { price[\"cheap4\"] } resonablePrice = { price[\"reasonable4\"] } highPrice = { price[\"expensive4\"] } NewPrice = { price[\"NewPrice\"] }/>\n  //             </div>\n  //         </div> */}\n  //     </>\n  // );\n\n}\n\nexport default StockPricingStratagyComp;","map":{"version":3,"sources":["/home/cosbi/financialSite/frontend/src/component/stock_pricing_stratagyPage/stock_pricing_stratagyComp.js"],"names":["axios","React","useEffect","useState","Typeahead","rootApiIP","PricingComp","priceInit","pricing1","pricing2","pricing3","pricing4","StockPricingStratagyComp","stockNum","setStockNum","year","setYear","autocom","setAutocom","price","setPrice","loading","setLoading","inputError","setInputError","table_data1","set_table_data1","get","then","res","data","catch","response","window","location","reload","submit","e","preventDefault","map","element","stock_num_name","includes","document","getElementsByClassName","value","post","slice"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport { rootApiIP } from '../../constant'\nimport PricingComp from './pricingComp';\nimport { priceInit, pricing1, pricing2, pricing3, pricing4 } from './pricingExplain';\n\nfunction StockPricingStratagyComp() {\n    const [stockNum, setStockNum] = useState([]);\n    const [year, setYear] = useState(\"?\");\n    const [autocom, setAutocom] = useState([]);\n    const [price, setPrice] = useState(priceInit);\n    const [loading, setLoading] = useState(false);\n    const [inputError, setInputError] = useState(false);\n    const [table_data1, set_table_data1] = useState({});\n\n    useEffect(() => {\n        axios.get(rootApiIP + \"/data/autoCom\")\n        .then(res => {\n            setAutocom(res.data);\n        }).catch(res => {\n            if(res.response.data === \"Session expired\") window.location.reload()\n        })\n    }, [])\n\n    function submit(e){\n        e.preventDefault();\n        setLoading(true);\n\n        if((autocom.map(element => element.stock_num_name).includes(document.getElementsByClassName('rbt-input-main form-control rbt-input')[0].value) === true) && (year !== \"?\")){\n            setInputError(false)\n\n            axios.post(rootApiIP + \"/data/pricing\", {\n                \"stockNum\" : stockNum[0][\"stock_num_name\"].slice(0, 4),\n                \"year\" : year\n            })\n            .then(res => {\n                setPrice(res.data)\n                setLoading(false)\n            }).catch(res => {\n                if(res.response.data === \"Session expired\") window.location.reload()\n                setLoading(false)\n            })\n        }else{\n            setInputError(true)\n            setLoading(false)\n        }\n    }\n\n    // return (\n    //     <>\n    //         <div className = 'row mx-auto py-3' style = {{ width : \"50vw\" }}>\n    //             <h3 className = \"display-6 text-center\">股票定價</h3>\n                \n    //             <form onSubmit = { submit }>\n    //                 <div className = 'form-group row'>\n    //                     <label htmlFor = \"stockNum_or_Name\" className = \"col-md-3 col-form-label text-center\">股票代號&名稱:&emsp;</label>\n    //                     <div className = 'col-md-3'>\n    //                         <Typeahead\n    //                             id = \"stockNum_or_Name\"\n    //                             labelKey = \"stock_num_name\"\n    //                             onChange = { setStockNum }\n    //                             options = { autocom }\n    //                             placeholder = \"請輸入股票代號或名稱\"\n    //                             selected = { stockNum }\n    //                         />\n    //                     </div>\n\n    //                     <label htmlFor = \"year\" className = \"col-md-3 col-form-label text-center\">歷史幾年資料:</label>\n    //                     <div className = 'col-md-3'>\n    //                         <select id = \"year\" className = \"form-select\" onChange = {e => setYear(e.target.value)}>\n    //                             <option value = \"\">請選擇年份</option>\n    //                             <option value = \"1\">1</option>\n    //                             <option value = \"2\">2</option>\n    //                             <option value = \"3\">3</option>\n    //                             <option value = \"4\">4</option>\n    //                             <option value = \"5\">5</option>\n    //                             <option value = \"6\">6</option>\n    //                             <option value = \"7\">7</option>\n    //                             <option value = \"8\">8</option>\n    //                             <option value = \"9\">9</option>\n    //                             <option value = \"10\">10</option>\n    //                         </select>\n    //                     </div>\n    //                 </div>\n\n    //                 <div className = 'form-group row py-3'>\n    //                     <div className = 'col-md-12 text-center'>\n    //                         { loading ? <button type = \"submit\" className = \"btn btn-primary\" style = {{ width : \"100px\" }} disabled><span className = \"spinner-border spinner-border-sm\" role = \"status\" aria-hidden = \"true\"></span></button> : <button type = \"submit\" className = \"btn btn-primary\" style = {{ width : \"100px\" }}>搜尋</button> }\n    //                     </div>\n    //                 </div>\n    //             </form>\n    //             { inputError ? <p className = 'text-center' style = {{ color : \"red\" }}>股票代號&名稱格式錯誤 或 年份錯誤</p> : <></> }\n    //         </div>\n\n    //         <div className = 'row mx-auto py-3' style = {{ width : \"90%\" }}>\n    //             <div className = 'col-md-12'>\n    //                 <div className = 'card'>\n    //                     <div className = 'card-body'>\n    //                         <h3 className = 'card-title'>最新價格: { price[\"NewPrice\"] }</h3>\n    //                     </div>\n    //                 </div>\n    //             </div>\n    //         </div>\n            \n    //         <div className = 'row mx-auto py-3' style = {{ width : \"90%\" }}>\n    //             <div className = 'col-md-12'>\n    //                 <PricingComp pricingName = \"股利法\" pricingExplain = { pricing1(year) } lowPrice = { price[\"cheap1\"] } resonablePrice = { price[\"reasonable1\"] } highPrice = { price[\"expensive1\"] } NewPrice = { price[\"NewPrice\"] } table_data = { table_data1 }/>\n    //             </div>\n\n    //             {/* <div className = 'col-md-6'>\n    //                 <PricingComp pricingName = \"高低價法\" pricingExplain = { pricing2(year) } lowPrice = { price[\"cheap2\"] } resonablePrice = { price[\"reasonable2\"] } highPrice = { price[\"expensive2\"] } NewPrice = { price[\"NewPrice\"] }/>\n    //             </div> */}\n    //         </div>\n\n    //         {/* <div className = 'row mx-auto py-3' style = {{ width : \"90%\" }}>\n    //             <div className = 'col-md-6'>\n    //                 <PricingComp pricingName = \"本益比法\" pricingExplain = { pricing3(year) } lowPrice = { price[\"cheap3\"] } resonablePrice = { price[\"reasonable3\"] } highPrice = { price[\"expensive3\"] } NewPrice = { price[\"NewPrice\"] }/>\n    //             </div>\n                \n    //             <div className = 'col-md-6'>\n    //                 <PricingComp pricingName = \"本淨比法\" pricingExplain = { pricing4(year) } lowPrice = { price[\"cheap4\"] } resonablePrice = { price[\"reasonable4\"] } highPrice = { price[\"expensive4\"] } NewPrice = { price[\"NewPrice\"] }/>\n    //             </div>\n    //         </div> */}\n    //     </>\n    // );\n}\n\nexport default StockPricingStratagyComp;"]},"metadata":{},"sourceType":"module"}