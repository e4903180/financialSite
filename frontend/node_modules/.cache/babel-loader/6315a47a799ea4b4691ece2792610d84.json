{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NavDropdownMenu = void 0;\n\nvar React = __importStar(require(\"react\"));\n\nvar react_bootstrap_1 = require(\"react-bootstrap\");\n\nvar react_1 = require(\"react\");\n\nexports.NavDropdownMenu = function (props) {\n  var divEl = react_1.useRef(null);\n\n  var onToggle = function onToggle(show, meta) {\n    if (divEl.current) {\n      if (show === false) {\n        var element = divEl.current;\n\n        if (element) {\n          var children = element.querySelectorAll('.dropdown-menu.show'); // @ts-ignore\n\n          for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n            var child = children_1[_i];\n            child.classList.remove('show');\n          }\n        }\n      }\n    }\n\n    if (typeof props.onToggle === 'function') {\n      props.onToggle(show, meta);\n    }\n  };\n\n  return React.createElement(react_bootstrap_1.NavDropdown, {\n    ref: divEl,\n    className: props.className,\n    title: props.title,\n    id: props.id,\n    onToggle: onToggle,\n    align: props.alignRight ? \"end\" : undefined,\n    disabled: props.disabled,\n    active: props.active,\n    menuRole: props.menuRole,\n    renderMenuOnMount: props.renderMenuOnMount,\n    rootCloseEvent: props.rootCloseEvent,\n    bsPrefix: props.bsPrefix,\n    drop: props.drop,\n    show: props.show,\n    focusFirstItemOnShow: props.focusFirstItemOnShow\n  }, props.children);\n};","map":null,"metadata":{},"sourceType":"script"}