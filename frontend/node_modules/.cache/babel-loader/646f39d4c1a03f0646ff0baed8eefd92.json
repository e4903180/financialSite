{"ast":null,"code":"import _slicedToArray from \"/home/cosbi/financialSite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/cosbi/financialSite/frontend/src/component/table.js\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableFooter from '@mui/material/TableFooter';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport TableHead from '@mui/material/TableHead';\n\nfunction TablePaginationActions(props) {\n  var theme = useTheme();\n  var count = props.count,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      onPageChange = props.onPageChange;\n\n  var handleFirstPageButtonClick = function handleFirstPageButtonClick(event) {\n    onPageChange(event, 0);\n  };\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onPageChange(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onPageChange(event, page + 1);\n  };\n\n  var handleLastPageButtonClick = function handleLastPageButtonClick(event) {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      flexShrink: 0,\n      ml: 2.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleFirstPageButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"first page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(LastPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(FirstPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"previous page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(KeyboardArrowRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(KeyboardArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 63\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"next page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(KeyboardArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(KeyboardArrowRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 62\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleLastPageButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"last page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(FirstPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(LastPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 58\n    }\n  })));\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\nexport default function CustomPaginationActionsTable(props) {\n  var _this = this;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(10),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rowsPerPage = _React$useState4[0],\n      setRowsPerPage = _React$useState4[1]; // Avoid a layout jump when reaching the last page with empty rows.\n\n\n  var emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - props.data.length) : 0;\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    sx: {\n      minWidth: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"\\u80A1\\u7968\\u4EE3\\u865F\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"\\u80A1\\u7968\\u540D\\u7A31\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"\\u8CC7\\u6599\\u65E5\\u671F\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"\\u63D0\\u4F9B\\u8005\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"\\u63A8\\u85A6\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"\\u6A94\\u6848\\u4E0B\\u8F09\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, (rowsPerPage > 0 ? props.data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : props.data).map(function (row) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: row.ID,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, row.stockNum), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, row.stockName), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, row.date), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, row.investmentCompany), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, row.recommand), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://140.116.214.154:3000/api/data/download?filePath=\" + row.filePath,\n      download: row.filePath.split(\"/\")[-1],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 28\n      }\n    }, \"download\")));\n  }), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: 53 * emptyRows\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, {\n      label: 'All',\n      value: -1\n    }],\n    colSpan: 3,\n    count: props.data.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    SelectProps: {\n      inputProps: {\n        'aria-label': 'rows per page'\n      },\n      native: true\n    },\n    onPageChange: handleChangePage,\n    onRowsPerPageChange: handleChangeRowsPerPage,\n    ActionsComponent: TablePaginationActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/home/cosbi/financialSite/frontend/src/component/table.js"],"names":["React","PropTypes","useTheme","Box","Table","TableBody","TableCell","TableContainer","TableFooter","TablePagination","TableRow","Paper","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","TableHead","TablePaginationActions","props","theme","count","page","rowsPerPage","onPageChange","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","flexShrink","ml","direction","propTypes","number","isRequired","func","CustomPaginationActionsTable","useState","setPage","setRowsPerPage","emptyRows","data","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","minWidth","slice","map","row","ID","stockNum","stockName","date","investmentCompany","recommand","filePath","split","height","label","inputProps","native"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableFooter from '@mui/material/TableFooter';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport TableHead from '@mui/material/TableHead';\n\nfunction TablePaginationActions(props) {\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onPageChange } = props;\n\n  const handleFirstPageButtonClick = (event) => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = (event) => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </Box>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nexport default function CustomPaginationActionsTable(props) {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - props.data.length) : 0;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <TableContainer component = { Paper }>\n      <Table sx={{ minWidth: 500 }}>\n        <TableHead>\n            <TableRow>\n                <TableCell>股票代號</TableCell>\n                <TableCell>股票名稱</TableCell>\n                <TableCell>資料日期</TableCell>\n                <TableCell>提供者</TableCell>\n                <TableCell>推薦</TableCell>\n                <TableCell>檔案下載</TableCell>\n            </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {(rowsPerPage > 0\n            ? props.data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : props.data\n          ).map((row) => (\n            <TableRow key={row.ID}>\n                <TableCell>{ row.stockNum }</TableCell>\n                <TableCell>{ row.stockName }</TableCell>\n                <TableCell>{ row.date }</TableCell>\n                <TableCell>{ row.investmentCompany }</TableCell>\n                <TableCell>{ row.recommand }</TableCell>\n                <TableCell><a href = { \"http://140.116.214.154:3000/api/data/download?filePath=\" + row.filePath } download = { row.filePath.split(\"/\")[-1]}>download</a></TableCell>\n            </TableRow>\n          ))}\n\n          {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n              colSpan={3}\n              count={props.data.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              SelectProps={{\n                inputProps: {\n                  'aria-label': 'rows per page',\n                },\n                native: true,\n              }}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}