{"ast":null,"code":"import _slicedToArray from \"/home/cosbi/financialSite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/cosbi/financialSite/frontend/src/component/meetingDataPage/meetingDataComp.js\";\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport MeetingDataUploadComp from './meetingDataUploadComp';\nimport { rootApiIP } from '../../constant';\nimport { columns6 } from '../column/column';\n\nfunction MeetingDataComp() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  var _useState5 = useState(5),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pageSize = _useState6[0],\n      setPageSize = _useState6[1];\n\n  useEffect(function () {\n    axios.get(rootApiIP + \"/data/meetingData\").then(function (res) {\n      setData(res.data);\n    }).catch(function (res) {\n      if (res.response.data === \"Session expired\") window.location.reload();\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MeetingDataUploadComp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mx-auto mt-5 text-center\",\n    style: {\n      width: \"80%\",\n      height: \"400px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    columns: columns6,\n    rows: data,\n    page: page,\n    onPageChange: function onPageChange(newPage) {\n      return setPage(newPage);\n    },\n    pageSize: pageSize,\n    onPageSizeChange: function onPageSizeChange(newPageSize) {\n      return setPageSize(newPageSize);\n    },\n    rowsPerPageOptions: [5, 10, 20],\n    getRowId: function getRowId(row) {\n      return row.ID;\n    },\n    components: {\n      Toolbar: GridToolbar\n    },\n    componentsProps: {\n      toolbar: {\n        showQuickFilter: true\n      }\n    },\n    pagination: true,\n    autoHeight: true,\n    disableColumnMenu: true,\n    disableColumnSelector: true,\n    disableDensitySelector: true,\n    disableColumnFilter: true,\n    disableSelectionOnClick: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default MeetingDataComp;","map":{"version":3,"sources":["/home/cosbi/financialSite/frontend/src/component/meetingDataPage/meetingDataComp.js"],"names":["DataGrid","GridToolbar","axios","React","useEffect","useState","MeetingDataUploadComp","rootApiIP","columns6","MeetingDataComp","data","setData","page","setPage","pageSize","setPageSize","get","then","res","catch","response","window","location","reload","width","height","newPage","newPageSize","row","ID","Toolbar","toolbar","showQuickFilter"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,kBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,SAASC,eAAT,GAA2B;AAAA,kBACCJ,QAAQ,CAAC,EAAD,CADT;AAAA;AAAA,MAChBK,IADgB;AAAA,MACVC,OADU;;AAAA,mBAECN,QAAQ,CAAC,CAAD,CAFT;AAAA;AAAA,MAEhBO,IAFgB;AAAA,MAEVC,OAFU;;AAAA,mBAGSR,QAAQ,CAAC,CAAD,CAHjB;AAAA;AAAA,MAGhBS,QAHgB;AAAA,MAGNC,WAHM;;AAKvBX,EAAAA,SAAS,CAAC,YAAM;AACZF,IAAAA,KAAK,CAACc,GAAN,CAAUT,SAAS,GAAG,mBAAtB,EACCU,IADD,CACM,UAAAC,GAAG,EAAI;AACTP,MAAAA,OAAO,CAACO,GAAG,CAACR,IAAL,CAAP;AACH,KAHD,EAGGS,KAHH,CAGS,UAAAD,GAAG,EAAI;AACZ,UAAGA,GAAG,CAACE,QAAJ,CAAaV,IAAb,KAAsB,iBAAzB,EAA4CW,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AAC/C,KALD;AAMH,GAPQ,EAON,EAPM,CAAT;AASA,sBACI,uDACI,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAGI;AAAK,IAAA,SAAS,EAAG,8BAAjB;AAAgD,IAAA,KAAK,EAAI;AAAEC,MAAAA,KAAK,EAAG,KAAV;AAAiBC,MAAAA,MAAM,EAAG;AAA1B,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AACI,IAAA,OAAO,EAAKjB,QADhB;AAEI,IAAA,IAAI,EAAKE,IAFb;AAGI,IAAA,IAAI,EAAKE,IAHb;AAII,IAAA,YAAY,EAAE,sBAACc,OAAD;AAAA,aAAab,OAAO,CAACa,OAAD,CAApB;AAAA,KAJlB;AAKI,IAAA,QAAQ,EAAKZ,QALjB;AAMI,IAAA,gBAAgB,EAAG,0BAACa,WAAD;AAAA,aAAiBZ,WAAW,CAACY,WAAD,CAA5B;AAAA,KANvB;AAOI,IAAA,kBAAkB,EAAI,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAP1B;AAQI,IAAA,QAAQ,EAAK,kBAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,EAAR;AAAA,KARpB;AASI,IAAA,UAAU,EAAI;AAAEC,MAAAA,OAAO,EAAE7B;AAAX,KATlB;AAUI,IAAA,eAAe,EAAI;AAAE8B,MAAAA,OAAO,EAAE;AAAEC,QAAAA,eAAe,EAAE;AAAnB;AAAX,KAVvB;AAWI,IAAA,UAAU,MAXd;AAYI,IAAA,UAAU,MAZd;AAaI,IAAA,iBAAiB,MAbrB;AAcI,IAAA,qBAAqB,MAdzB;AAeI,IAAA,sBAAsB,MAf1B;AAgBI,IAAA,mBAAmB,MAhBvB;AAiBI,IAAA,uBAAuB,EAAK,IAjBhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHJ,CADJ;AA2BH;;AAED,eAAevB,eAAf","sourcesContent":["import { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport MeetingDataUploadComp from './meetingDataUploadComp';\nimport { rootApiIP } from '../../constant'\nimport { columns6 } from '../column/column';\n\nfunction MeetingDataComp() {\n    const [data, setData] = useState([]);\n    const [page, setPage] = useState(0);\n    const [pageSize, setPageSize] = useState(5);\n\n    useEffect(() => {\n        axios.get(rootApiIP + \"/data/meetingData\")\n        .then(res => {\n            setData(res.data);\n        }).catch(res => {\n            if(res.response.data === \"Session expired\") window.location.reload()\n        })\n    }, [])\n\n    return (\n        <>\n            <MeetingDataUploadComp />\n\n            <div className = 'row mx-auto mt-5 text-center' style = {{ width : \"80%\", height : \"400px\" }}>\n                <DataGrid\n                    columns = { columns6 }\n                    rows = { data }\n                    page = { page }\n                    onPageChange={(newPage) => setPage(newPage)}\n                    pageSize = { pageSize }\n                    onPageSizeChange={ (newPageSize) => setPageSize(newPageSize) }\n                    rowsPerPageOptions = {[5, 10, 20]}\n                    getRowId = { row => row.ID }\n                    components = {{ Toolbar: GridToolbar }}\n                    componentsProps = {{ toolbar: { showQuickFilter: true },}}\n                    pagination\n                    autoHeight\n                    disableColumnMenu\n                    disableColumnSelector\n                    disableDensitySelector\n                    disableColumnFilter\n                    disableSelectionOnClick = { true }\n                />\n            </div>\n        </>\n    );\n}\n\nexport default MeetingDataComp;"]},"metadata":{},"sourceType":"module"}