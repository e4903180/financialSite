{"ast":null,"code":"import _slicedToArray from \"/home/cosbi/financialSite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/cosbi/financialSite/frontend/src/component/homePage/calendarItem.js\";\nimport React, { useEffect, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { DayPilot, DayPilotMonth } from \"@daypilot/daypilot-lite-react\";\nimport axios from 'axios';\nimport { config } from '../../constant';\nimport { columns_twse } from '../column/column';\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport { Button } from '@mui/material';\n\nfunction CalendarItem() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(new Date().getFullYear()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      year = _useState4[0],\n      setYear = _useState4[1];\n\n  var _useState5 = useState(new Date().getMonth() + 1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      month = _useState6[0],\n      setMonth = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      page = _useState8[0],\n      setPage = _useState8[1];\n\n  var _useState9 = useState(10),\n      _useState10 = _slicedToArray(_useState9, 2),\n      pageSize = _useState10[0],\n      setPageSize = _useState10[1];\n\n  var _useState11 = useState({\n    startDate: DayPilot.Date.today()\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      option = _useState12[0],\n      setOption = _useState12[1];\n\n  useEffect(function () {\n    axios.post(config[\"rootApiIP\"] + \"/data/calenderData\", {\n      \"year\": year,\n      \"month\": month\n    }).then(function (res) {\n      setPage(0);\n      setData(res.data);\n    }).catch(function (res) {\n      if (res.response.data === \"Session expired\") window.location.reload();\n    });\n    axios.get(config[\"rootApiIP\"] + \"/data/calender\", {\n      params: {\n        \"year\": year,\n        \"month\": month\n      }\n    }).then(function (res) {\n      setOption({\n        events: res.data\n      });\n    }).catch(function (res) {\n      if (res.response.data === \"Session expired\") window.location.reload();\n    });\n  }, [year, month]);\n\n  function clickEvent(info) {\n    window.open(config[\"rootPathPrefix\"] + \"/database/search/\" + info.event.title, '_blank', 'noopener,noreferrer');\n  } // async function getCalendarData(fetchInfo, successCallback, failureCallback) {\n  //     try {\n  //         let temp_year = fetchInfo.start.getFullYear()\n  //         let temp_month = (fetchInfo.start.getMonth() + 1).toString().padStart(2, '0');\n  //         setYear(temp_year)\n  //         setMonth(temp_month)\n  //         const response = await axios.post(config[\"rootApiIP\"] + \"/data/calender\", { \"year\" : temp_year, \"month\" : temp_month })\n  //         successCallback(\n  //             response.data.map(event => {\n  //                 return ({\n  //                     title: event.title,\n  //                     start: event.date.slice(0, 10),\n  //                 });\n  //             })\n  //         );\n  //     } catch (error) {\n  //         if(error.response.data === \"Session expired\") window.location.reload()\n  //         failureCallback(error)\n  //     }\n  // }\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row py-3 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toolBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return setOption({});\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calender\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DayPilotMonth, Object.assign({}, option, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row py-3 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"\\u6CD5\\u8AAA\\u6703\\u8A73\\u7D30\\u8CC7\\u8A0A\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-10 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    autoHeight: true,\n    columns: columns_twse,\n    rows: data,\n    page: page,\n    onPageChange: function onPageChange(newPage) {\n      return setPage(newPage);\n    },\n    pageSize: pageSize,\n    onPageSizeChange: function onPageSizeChange(newPageSize) {\n      return setPageSize(newPageSize);\n    },\n    rowsPerPageOptions: [5, 10, 20],\n    getRowId: function getRowId(row) {\n      return row.ID;\n    },\n    components: {\n      Toolbar: GridToolbar\n    },\n    componentsProps: {\n      toolbar: {\n        showQuickFilter: true\n      }\n    },\n    pagination: true,\n    disableColumnMenu: true,\n    disableColumnSelector: true,\n    disableDensitySelector: true,\n    disableColumnFilter: true,\n    disableSelectionOnClick: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default CalendarItem;","map":{"version":3,"sources":["/home/cosbi/financialSite/frontend/src/component/homePage/calendarItem.js"],"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","DayPilot","DayPilotMonth","axios","config","columns_twse","DataGrid","GridToolbar","Button","CalendarItem","data","setData","Date","getFullYear","year","setYear","getMonth","month","setMonth","page","setPage","pageSize","setPageSize","startDate","today","option","setOption","post","then","res","catch","response","window","location","reload","get","params","events","clickEvent","info","open","event","title","newPage","newPageSize","row","ID","Toolbar","toolbar","showQuickFilter"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport {DayPilot, DayPilotMonth} from \"@daypilot/daypilot-lite-react\";\nimport axios from 'axios';\nimport { config } from '../../constant';\nimport { columns_twse } from '../column/column';\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport { Button } from '@mui/material';\n\nfunction CalendarItem() {\n    const [data, setData] = useState([])\n    const [year, setYear] = useState(new Date().getFullYear())\n    const [month, setMonth] = useState(new Date().getMonth() + 1)\n    const [page, setPage] = useState(0);\n    const [pageSize, setPageSize] = useState(10);\n    const [option, setOption] = useState({\n        startDate : DayPilot.Date.today()\n    })\n\n    useEffect(() => {\n        axios.post(config[\"rootApiIP\"] + \"/data/calenderData\", { \"year\" : year, \"month\" : month })\n        .then(res => {\n            setPage(0)\n            setData(res.data)\n        }).catch(res => {\n            if(res.response.data === \"Session expired\") window.location.reload()\n        })\n\n        axios.get(config[\"rootApiIP\"] + \"/data/calender\", {\n            params: {\n                \"year\" : year,\n                \"month\" : month\n            }\n        })\n        .then(res => {\n            setOption({\n                events : res.data\n            })\n        }).catch(res => {\n            if(res.response.data === \"Session expired\") window.location.reload()\n        })\n    }, [year, month])\n\n    function clickEvent(info){\n        window.open(config[\"rootPathPrefix\"] + \"/database/search/\" + info.event.title, '_blank', 'noopener,noreferrer')\n    }\n\n    // async function getCalendarData(fetchInfo, successCallback, failureCallback) {\n    //     try {\n    //         let temp_year = fetchInfo.start.getFullYear()\n    //         let temp_month = (fetchInfo.start.getMonth() + 1).toString().padStart(2, '0');\n\n    //         setYear(temp_year)\n    //         setMonth(temp_month)\n\n    //         const response = await axios.post(config[\"rootApiIP\"] + \"/data/calender\", { \"year\" : temp_year, \"month\" : temp_month })\n\n    //         successCallback(\n    //             response.data.map(event => {\n    //                 return ({\n    //                     title: event.title,\n    //                     start: event.date.slice(0, 10),\n    //                 });\n    //             })\n    //         );\n    //     } catch (error) {\n    //         if(error.response.data === \"Session expired\") window.location.reload()\n    //         failureCallback(error)\n    //     }\n    // }\n    \n    return (\n        <>\n            {/* <div className = 'row py-3 mx-auto'>\n                <div className = 'col-md-8 mx-auto'>\n                    <FullCalendar\n                        contentHeight={\"auto\"}\n                        aspectRatio={1.8}\n                        plugins={[ dayGridPlugin ]}\n                        initialView = \"dayGridMonth\"\n                        events = { (fetchInfo, successCallback, failureCallback) => getCalendarData(fetchInfo, successCallback, failureCallback) }\n                        dayMaxEventRows = { 3 }\n                        eventClick = { clickEvent }\n                        eventMouseEnter = { info => info.el.style.cursor = \"pointer\" }\n                        showNonCurrentDates = { false }\n                        fixedWeekCount = { false }\n                    />\n                </div>\n            </div> */}\n\n            <div className = 'row py-3 mx-auto'>\n                <div className = 'toolBar'>\n                    <Button onClick = {() => setOption({\n                        \n                    })}></Button>\n                </div>\n\n                <div className = 'calender'>\n                    <DayPilotMonth\n                        {...option}\n                    />\n                </div>\n            </div>\n\n            <div className = 'row py-3 mx-auto'>\n                <h2 className = 'text-center'>法說會詳細資訊</h2>\n                \n                <div className = 'col-md-10 mx-auto'>\n                    <DataGrid\n                        autoHeight\n                        columns = { columns_twse }\n                        rows = { data }\n                        page = { page }\n                        onPageChange = {(newPage) => setPage(newPage)}\n                        pageSize = { pageSize }\n                        onPageSizeChange={ (newPageSize) => setPageSize(newPageSize) }\n                        rowsPerPageOptions = {[5, 10, 20]}\n                        getRowId = { row => row.ID }\n                        components = {{ Toolbar: GridToolbar }}\n                        componentsProps = {{ toolbar: { showQuickFilter: true },}}\n                        pagination\n                        disableColumnMenu\n                        disableColumnSelector\n                        disableDensitySelector\n                        disableColumnFilter\n                        disableSelectionOnClick = { true }\n                    />\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default CalendarItem;"]},"metadata":{},"sourceType":"module"}