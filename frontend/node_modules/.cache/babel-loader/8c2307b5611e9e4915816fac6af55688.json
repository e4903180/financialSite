{"ast":null,"code":"import _regeneratorRuntime from \"/home/cosbi/financialSite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/cosbi/financialSite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/cosbi/financialSite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/cosbi/financialSite/frontend/src/component/calendarPage/calendarComp.js\";\nimport React, { useEffect, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport axios from 'axios';\nimport { rootApiIP } from '../../constant';\n\nfunction CalendarComp() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  function clickEvent(info) {\n    window.open(\"http://140.116.214.154:8080/allSearch/\" + info.event.title.slice(0, 4));\n  }\n\n  function getCalendarData(_x, _x2) {\n    return _getCalendarData.apply(this, arguments);\n  }\n\n  function _getCalendarData() {\n    _getCalendarData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(fetchInfo, successCallback) {\n      var year, month, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              year = new Date().getFullYear();\n              month = new Date().getMonth() + 1;\n\n              if (fetchInfo) {\n                year = new Date(fetchInfo.start).getFullYear();\n                month = new Date(fetchInfo.start).getMonth() + 1;\n              }\n\n              _context.next = 6;\n              return axios.post(rootApiIP + \"/data/calender\", {\n                \"year\": year,\n                \"month\": month\n              });\n\n            case 6:\n              response = _context.sent;\n              successCallback(response.data.map(function (event) {\n                return {\n                  title: event.title,\n                  start: event.date\n                };\n              }));\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n    return _getCalendarData.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-3 mx-auto text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"\\u6CD5\\u8AAA\\u6703\\u884C\\u4E8B\\u66C6\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-3 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FullCalendar, {\n    height: 600,\n    plugins: [dayGridPlugin],\n    initialView: \"dayGridMonth\",\n    events: function events(fetchInfo, successCallback, failureCallback) {\n      return getCalendarData(fetchInfo, successCallback, failureCallback);\n    },\n    dayMaxEventRows: 2,\n    eventClick: clickEvent,\n    eventMouseEnter: function eventMouseEnter(info) {\n      return info.el.style.cursor = \"pointer\";\n    },\n    showNonCurrentDates: false,\n    fixedWeekCount: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default CalendarComp;","map":{"version":3,"sources":["/home/cosbi/financialSite/frontend/src/component/calendarPage/calendarComp.js"],"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","axios","rootApiIP","CalendarComp","data","setData","clickEvent","info","window","open","event","title","slice","getCalendarData","fetchInfo","successCallback","year","Date","getFullYear","month","getMonth","start","post","response","map","date","console","log","failureCallback","el","style","cursor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport axios from 'axios';\nimport { rootApiIP } from '../../constant'\n\nfunction CalendarComp() {\n    const [data, setData] = useState([])\n\n\n    function clickEvent(info){\n        window.open(\"http://140.116.214.154:8080/allSearch/\" + info.event.title.slice(0, 4))\n    }\n\n    async function getCalendarData(fetchInfo, successCallback) {\n        try {\n            let year = new Date().getFullYear();\n            let month = new Date().getMonth() + 1;\n        \n            if (fetchInfo) {\n                year = new Date(fetchInfo.start).getFullYear();\n                month = new Date(fetchInfo.start).getMonth() + 1;\n            }\n            \n            const response = await axios.post(rootApiIP + \"/data/calender\", { \"year\" : year, \"month\" : month })\n        \n            successCallback(\n                response.data.map(event => {\n                    return ({\n                        title: event.title,\n                        start: event.date,\n                    });\n                })\n            );\n        } catch (error) {\n          console.log(error);\n        }\n      }\n\n    return (\n        <>\n            <div className = 'row mt-3 mx-auto text-center'>\n                <h1>法說會行事曆</h1>\n            </div>\n\n            <div className = 'row mt-3 mx-auto'>\n                <div className = 'col-md-6 mx-auto'>\n                    <FullCalendar\n                        height = { 600 }\n                        plugins={[ dayGridPlugin ]}\n                        initialView = \"dayGridMonth\"\n                        events = { (fetchInfo, successCallback, failureCallback) => getCalendarData(fetchInfo, successCallback, failureCallback) }\n                        dayMaxEventRows = { 2 }\n                        eventClick = { clickEvent }\n                        eventMouseEnter = { info => info.el.style.cursor = \"pointer\" }\n                        showNonCurrentDates = { false }\n                        fixedWeekCount = { false }\n                    />\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default CalendarComp;"]},"metadata":{},"sourceType":"module"}