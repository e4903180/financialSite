{"ast":null,"code":"import _slicedToArray from \"/home/cosbi/financialSite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { rootApiIP } from '../../constant';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\n\nfunction IndustryEditComp() {\n  var date = new Date();\n  var today = date.getFullYear() + \"-\" + String(date.getMonth() + 1).padStart(2, '0') + \"-\" + String(date.getDate()).padStart(2, '0');\n  date.setDate(1);\n  date.setMonth(date.getMonth() - 3);\n  var last3Month = date.getFullYear() + \"-\" + String(date.getMonth() + 1).padStart(2, '0') + \"-\" + String(date.getDate()).padStart(2, '0');\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  var _useState5 = useState(10),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pageSize = _useState6[0],\n      setPageSize = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      superUser = _useState8[0],\n      setSuperUser = _useState8[1];\n\n  function handle_sub_list_cancel(rowData) {\n    axios.delete(rootApiIP + \"/data/financial\", {\n      data: {\n        ID: rowData.row.ID\n      }\n    }).then(function (res) {\n      setData(data.filter(function (data) {\n        return data.ID !== rowData.row.ID;\n      }));\n    }).catch(function (res) {\n      if (res.response.data === \"Session expired\") window.location.reload();\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n}\n\nexport default IndustryEditComp;","map":{"version":3,"sources":["/home/cosbi/financialSite/frontend/src/component/industryEditPage/industryEditComp.js"],"names":["DataGrid","GridToolbar","axios","React","useEffect","useState","rootApiIP","DeleteOutlineIcon","IndustryEditComp","date","Date","today","getFullYear","String","getMonth","padStart","getDate","setDate","setMonth","last3Month","data","setData","page","setPage","pageSize","setPageSize","superUser","setSuperUser","handle_sub_list_cancel","rowData","delete","ID","row","then","res","filter","catch","response","window","location","reload"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,kBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;;AAGA,SAASC,gBAAT,GAA4B;AACxB,MAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,MAAMC,KAAK,GAAGF,IAAI,CAACG,WAAL,KAAqB,GAArB,GAA2BC,MAAM,CAACJ,IAAI,CAACK,QAAL,KAAkB,CAAnB,CAAN,CAA4BC,QAA5B,CAAqC,CAArC,EAAwC,GAAxC,CAA3B,GAA0E,GAA1E,GAAgFF,MAAM,CAACJ,IAAI,CAACO,OAAL,EAAD,CAAN,CAAuBD,QAAvB,CAAgC,CAAhC,EAAmC,GAAnC,CAA9F;AACAN,EAAAA,IAAI,CAACQ,OAAL,CAAa,CAAb;AACAR,EAAAA,IAAI,CAACS,QAAL,CAAcT,IAAI,CAACK,QAAL,KAAkB,CAAhC;AAEA,MAAMK,UAAU,GAAGV,IAAI,CAACG,WAAL,KAAqB,GAArB,GAA2BC,MAAM,CAACJ,IAAI,CAACK,QAAL,KAAkB,CAAnB,CAAN,CAA4BC,QAA5B,CAAqC,CAArC,EAAwC,GAAxC,CAA3B,GAA0E,GAA1E,GAAgFF,MAAM,CAACJ,IAAI,CAACO,OAAL,EAAD,CAAN,CAAuBD,QAAvB,CAAgC,CAAhC,EAAmC,GAAnC,CAAnG;;AANwB,kBAQAV,QAAQ,CAAC,EAAD,CARR;AAAA;AAAA,MAQjBe,IARiB;AAAA,MAQXC,OARW;;AAAA,mBASAhB,QAAQ,CAAC,CAAD,CATR;AAAA;AAAA,MASjBiB,IATiB;AAAA,MASXC,OATW;;AAAA,mBAUQlB,QAAQ,CAAC,EAAD,CAVhB;AAAA;AAAA,MAUjBmB,QAViB;AAAA,MAUPC,WAVO;;AAAA,mBAWUpB,QAAQ,CAAC,CAAD,CAXlB;AAAA;AAAA,MAWjBqB,SAXiB;AAAA,MAWNC,YAXM;;AAaxB,WAASC,sBAAT,CAAgCC,OAAhC,EAAwC;AACpC3B,IAAAA,KAAK,CAAC4B,MAAN,CAAaxB,SAAS,GAAG,iBAAzB,EAA4C;AACxCc,MAAAA,IAAI,EAAG;AACHW,QAAAA,EAAE,EAAGF,OAAO,CAACG,GAAR,CAAYD;AADd;AADiC,KAA5C,EAKCE,IALD,CAKM,UAAAC,GAAG,EAAI;AACTb,MAAAA,OAAO,CAACD,IAAI,CAACe,MAAL,CAAY,UAACf,IAAD;AAAA,eAAUA,IAAI,CAACW,EAAL,KAAYF,OAAO,CAACG,GAAR,CAAYD,EAAlC;AAAA,OAAZ,CAAD,CAAP;AACH,KAPD,EAQCK,KARD,CAQO,UAAAF,GAAG,EAAI;AACV,UAAGA,GAAG,CAACG,QAAJ,CAAajB,IAAb,KAAsB,iBAAzB,EAA4CkB,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AAC/C,KAVD;AAWH;;AAED,sBACI,yCADJ;AAKH;;AAED,eAAehC,gBAAf","sourcesContent":["import { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { rootApiIP } from '../../constant';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\n\n\nfunction IndustryEditComp() {\n    var date = new Date();\n    const today = date.getFullYear() + \"-\" + String(date.getMonth() + 1).padStart(2, '0') + \"-\" + String(date.getDate()).padStart(2, '0')\n    date.setDate(1);\n    date.setMonth(date.getMonth() - 3);\n    \n    const last3Month = date.getFullYear() + \"-\" + String(date.getMonth() + 1).padStart(2, '0') + \"-\" + String(date.getDate()).padStart(2, '0')\n\n    const [data, setData] = useState([])\n    const [page, setPage] = useState(0)\n    const [pageSize, setPageSize] = useState(10)\n    const [superUser, setSuperUser] = useState(0)\n\n    function handle_sub_list_cancel(rowData){\n        axios.delete(rootApiIP + \"/data/financial\", {\n            data : {\n                ID : rowData.row.ID\n            }\n        })\n        .then(res => {\n            setData(data.filter((data) => data.ID !== rowData.row.ID));\n        })\n        .catch(res => {\n            if(res.response.data === \"Session expired\") window.location.reload()\n        })\n    }\n    \n    return (\n        <>\n\n        </>\n    );\n}\n\nexport default IndustryEditComp;"]},"metadata":{},"sourceType":"module"}