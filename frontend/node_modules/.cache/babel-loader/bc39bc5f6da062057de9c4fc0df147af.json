{"ast":null,"code":"import _slicedToArray from \"/home/cosbi/financialSite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/cosbi/financialSite/frontend/src/component/newsPage/newsItem.js\";\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { config } from '../../constant';\nimport { columns_news } from '../column/column';\nimport { categoryList } from './categoryList';\n\nfunction NewsItem(props) {\n  var _this = this;\n\n  var Today = new Date();\n  var todayDate = Today.getFullYear() + \"-\" + String(Today.getMonth() + 1).padStart(2, '0') + \"-\" + String(Today.getDate()).padStart(2, '0');\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useState3 = useState(10),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pageSize = _useState4[0],\n      setPageSize = _useState4[1];\n\n  var _useState5 = useState(\"title\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      column = _useState6[0],\n      setColumn = _useState6[1];\n\n  var _useState7 = useState(\"全部\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      category = _useState8[0],\n      setCategory = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      pattern = _useState10[0],\n      setPattern = _useState10[1];\n\n  var _useState11 = useState(todayDate),\n      _useState12 = _slicedToArray(_useState11, 2),\n      startDate = _useState12[0],\n      setStartDate = _useState12[1];\n\n  var _useState13 = useState(todayDate),\n      _useState14 = _slicedToArray(_useState13, 2),\n      endDate = _useState14[0],\n      setEndDate = _useState14[1];\n\n  var submit = function submit(e) {\n    e.preventDefault();\n    props.setLoading(true);\n    axios.get(config[\"rootApiIP\"] + \"/data/news_search\", {\n      params: {\n        \"startDate\": startDate,\n        \"endDate\": endDate,\n        \"column\": column,\n        \"pattern\": pattern,\n        \"category\": category\n      }\n    }).then(function (res) {\n      props.setData(res.data);\n      props.setLoading(false);\n    }).catch(function (res) {\n      if (res.response.data === \"Session expired\") window.location.reload();\n      props.setLoading(false);\n    });\n  };\n\n  useEffect(function () {\n    setPage(0);\n  }, [props.data]);\n  useEffect(function () {\n    if (props.startDate !== \"\" && props.endDate !== \"\") {\n      setStartDate(props.startDate);\n      setEndDate(props.endDate);\n    }\n  }, [props.startDate, props.endDate]);\n  useEffect(function () {}, [props.cate]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mx-auto py-3\",\n    style: {\n      width: \"50vw\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"columns\",\n    className: \"col-md-3 col-form-label text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, \"\\u641C\\u5C0B\\u6B04\\u4F4D:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"columns\",\n    className: \"form-select\",\n    onChange: function onChange(e) {\n      return setColumn(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 33\n    }\n  }, \"\\u65B0\\u805E\\u6A19\\u984C\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"repoter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 33\n    }\n  }, \"\\u8A18\\u8005\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    onChange: function onChange(e) {\n      return setPattern(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"category\",\n    className: \"col-md-3 col-form-label text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, \"\\u65B0\\u805E\\u985E\\u5225:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"category\",\n    className: \"form-select\",\n    value: category,\n    onChange: function onChange(e) {\n      return setCategory(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, categoryList.map(function (ele, idx) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: ele,\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 41\n      }\n    }, ele);\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"startDate\",\n    className: \"col-md-3 col-form-label text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, \"\\u65E5\\u671F:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    id: \"startDate\",\n    className: \"form-control\",\n    onChange: function onChange(e) {\n      return setStartDate(e.target.value);\n    },\n    value: startDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"endDate\",\n    className: \"col-md-3 col-form-label text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, \"\\u5230\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    id: \"endDate\",\n    className: \"form-control\",\n    onChange: function onChange(e) {\n      return setEndDate(e.target.value);\n    },\n    value: endDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    style: {\n      width: \"100px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, \"\\u641C\\u5C0B\"))))), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"display-6 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"\\u67E5\\u8A62\\u7D50\\u679C\"), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mx-auto py-3\",\n    style: {\n      width: \"90%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-10 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    columns: columns_news,\n    rows: props.data,\n    page: page,\n    onPageChange: function onPageChange(newPage) {\n      return setPage(newPage);\n    },\n    pageSize: pageSize,\n    onPageSizeChange: function onPageSizeChange(newPageSize) {\n      return setPageSize(newPageSize);\n    },\n    rowsPerPageOptions: [5, 10, 20],\n    getRowId: function getRowId(row) {\n      return row.ID;\n    },\n    components: {\n      Toolbar: GridToolbar\n    },\n    componentsProps: {\n      toolbar: {\n        showQuickFilter: true\n      }\n    },\n    pagination: true,\n    autoHeight: true,\n    disableColumnMenu: true,\n    disableColumnSelector: true,\n    disableDensitySelector: true,\n    disableColumnFilter: true,\n    disableSelectionOnClick: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default NewsItem;","map":{"version":3,"sources":["/home/cosbi/financialSite/frontend/src/component/newsPage/newsItem.js"],"names":["DataGrid","GridToolbar","axios","React","useEffect","useState","config","columns_news","categoryList","NewsItem","props","Today","Date","todayDate","getFullYear","String","getMonth","padStart","getDate","page","setPage","pageSize","setPageSize","column","setColumn","category","setCategory","pattern","setPattern","startDate","setStartDate","endDate","setEndDate","submit","e","preventDefault","setLoading","get","params","then","res","setData","data","catch","response","window","location","reload","cate","width","target","value","map","ele","idx","newPage","newPageSize","row","ID","Toolbar","toolbar","showQuickFilter"],"mappings":"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","sourcesContent":["import { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { config } from '../../constant';\nimport { columns_news } from '../column/column';\nimport { categoryList } from './categoryList';\n\nfunction NewsItem(props) {\n    var Today = new Date()\n    const todayDate = Today.getFullYear() + \"-\" + String(Today.getMonth()+1).padStart(2, '0') + \"-\" + String(Today.getDate()).padStart(2, '0')\n\n    const [page, setPage] = useState(0)\n    const [pageSize, setPageSize] = useState(10)\n    const [column, setColumn] = useState(\"title\")\n    const [category, setCategory] = useState(\"全部\")\n    const [pattern, setPattern] = useState(\"\")\n    const [startDate, setStartDate] = useState(todayDate)\n    const [endDate, setEndDate] = useState(todayDate)\n\n    const submit = (e) => {\n        e.preventDefault()\n        props.setLoading(true)\n\n        axios.get(config[\"rootApiIP\"] + \"/data/news_search\", { params :{\n            \"startDate\" : startDate,\n            \"endDate\" : endDate,\n            \"column\" : column,\n            \"pattern\" : pattern,\n            \"category\" : category\n        }})\n        .then((res) => {\n            props.setData(res.data)\n            props.setLoading(false)\n        })\n        .catch((res) => {\n            if(res.response.data === \"Session expired\") window.location.reload()\n            props.setLoading(false)\n        })\n    }\n\n    useEffect(() => {\n        setPage(0)\n    }, [props.data])\n\n    useEffect(() => {\n        if(props.startDate !== \"\" && props.endDate !== \"\"){\n            setStartDate(props.startDate)\n            setEndDate(props.endDate)\n        }\n    }, [props.startDate, props.endDate])\n\n    useEffect(() => {}, [props.cate])\n\n    return (\n        <>\n            <div className = 'row mx-auto py-3' style = {{ width : \"50vw\" }}>\n                <form onSubmit = { submit }>\n                    <div className = 'form-group row py-3'>\n                        <label htmlFor = \"columns\" className = \"col-md-3 col-form-label text-center\">搜尋欄位:</label>\n                        <div className = 'col-md-3'>\n                            <select id = \"columns\" className = \"form-select\" onChange = {e => setColumn(e.target.value)}>\n                                <option value = \"title\">新聞標題</option>\n                                <option value = \"repoter\">記者</option>\n                            </select>\n                        </div>\n                        \n                        <div className = 'col-md-6'>\n                            <input type = \"text\" className = \"form-control\" onChange = { e => \n                                setPattern(e.target.value) }></input>\n                        </div>\n                    </div>\n\n                    <div className = 'form-group row py-3'>\n                        <label htmlFor = \"category\" className = \"col-md-3 col-form-label text-center\">新聞類別:</label>\n                        <div className = 'col-md-4'>\n                            <select id = \"category\" className = \"form-select\" value = { category } onChange = {e => setCategory(e.target.value)}>\n                                { \n                                    categoryList.map((ele, idx) => \n                                        <option value = { ele } key = { idx }>{ele}</option>) \n                                }\n                            </select>\n                        </div>\n                    </div>\n\n                    <div className = 'form-group row py-3'>\n                        <label htmlFor = \"startDate\" className = \"col-md-3 col-form-label text-center\">日期:</label>\n                        <div className = 'col-md-3'>\n                            <input type = \"date\" id = \"startDate\" className = \"form-control\" onChange = {e => setStartDate(e.target.value)} value = { startDate }></input>\n                        </div>\n\n                        <label htmlFor = \"endDate\" className = \"col-md-3 col-form-label text-center\">到</label>\n                        <div className = 'col-md-3'>\n                            <input type = \"date\" id = \"endDate\" className = \"form-control\" onChange = {e => setEndDate(e.target.value)} value = { endDate }></input>\n                        </div>\n                    </div>\n\n                    <div className = 'form-group row py-3'>\n                        <div className = 'col-md-12 text-center'>\n                            <button type = \"submit\" className = \"btn btn-primary\" style = {{ width : \"100px\" }}>搜尋</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            \n            <h3 className = \"display-6 text-center\">查詢結果</h3>\n            <hr className = 'mx-auto'/>\n\n            <div className = 'row mx-auto py-3' style = {{ width : \"90%\" }}>\n                <div className = 'col-md-10 mx-auto'>\n                    <DataGrid\n                        columns = { columns_news }\n                        rows = { props.data }\n                        page = { page }\n                        onPageChange={(newPage) => setPage(newPage)}\n                        pageSize = { pageSize }\n                        onPageSizeChange={ (newPageSize) => setPageSize(newPageSize) }\n                        rowsPerPageOptions = {[5, 10, 20]}\n                        getRowId = { row => row.ID }\n                        components = {{ Toolbar: GridToolbar }}\n                        componentsProps = {{ toolbar: { showQuickFilter: true },}}\n                        pagination\n                        autoHeight\n                        disableColumnMenu\n                        disableColumnSelector\n                        disableDensitySelector\n                        disableColumnFilter\n                        disableSelectionOnClick = { true }\n                    />\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default NewsItem;"]},"metadata":{},"sourceType":"module"}