{"ast":null,"code":"import _regeneratorRuntime from \"/home/cosbi/financialSite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/cosbi/financialSite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/cosbi/financialSite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/cosbi/financialSite/frontend/src/component/calendarPage/calendarComp.js\";\nimport React, { useEffect, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport axios from 'axios';\nimport { rootApiIP } from '../../constant';\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport { columns4 } from '../column/column';\n\nfunction CalendarComp() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(new Date().getFullYear()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      year = _useState4[0],\n      setYear = _useState4[1];\n\n  var _useState5 = useState(new Date().getMonth() + 1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      month = _useState6[0],\n      setMonth = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      page = _useState8[0],\n      setPage = _useState8[1];\n\n  var _useState9 = useState(10),\n      _useState10 = _slicedToArray(_useState9, 2),\n      pageSize = _useState10[0],\n      setPageSize = _useState10[1];\n\n  useEffect(function () {\n    axios.post(rootApiIP + \"/data/calenderData\", {\n      \"year\": year,\n      \"month\": month\n    }).then(function (res) {\n      setPage(0);\n      setData(res.data);\n    }).catch(function (res) {\n      if (res.response.data === \"Session expired\") window.location.reload();\n    });\n  }, [year, month]);\n\n  function clickEvent(info) {\n    window.open(\"/database/search/\" + info.event.title, '_blank', 'noopener,noreferrer');\n  }\n\n  function getCalendarData(_x, _x2) {\n    return _getCalendarData.apply(this, arguments);\n  }\n\n  function _getCalendarData() {\n    _getCalendarData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(fetchInfo, successCallback) {\n      var _year, _month, response;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _year = fetchInfo.start.getFullYear();\n              _month = fetchInfo.start.getMonth() + 1;\n              setYear(_year);\n              setMonth(_month);\n              _context.next = 7;\n              return axios.post(rootApiIP + \"/data/calender\", {\n                \"year\": _year,\n                \"month\": _month\n              });\n\n            case 7:\n              response = _context.sent;\n              successCallback(response.data.map(function (event) {\n                return {\n                  title: event.title,\n                  start: event.date\n                };\n              }));\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              if (_context.t0.response.data === \"Session expired\") window.location.reload();\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n    return _getCalendarData.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-3 mx-auto text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"\\u6CD5\\u8AAA\\u6703\\u884C\\u4E8B\\u66C6\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-3 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FullCalendar, {\n    height: \"auto\",\n    plugins: [dayGridPlugin],\n    initialView: \"dayGridMonth\",\n    events: function events(fetchInfo, successCallback) {\n      return getCalendarData(fetchInfo, successCallback);\n    },\n    dayMaxEventRows: 3,\n    eventClick: clickEvent,\n    eventMouseEnter: function eventMouseEnter(info) {\n      return info.el.style.cursor = \"pointer\";\n    },\n    showNonCurrentDates: false,\n    fixedWeekCount: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-5 mx-auto text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"\\u6CD5\\u8AAA\\u6703\\u8A73\\u7D30\\u8CC7\\u8A0A\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-3 mx-auto\",\n    style: {\n      minheight: \"600px\",\n      height: \"900px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-10 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    columns: columns4,\n    rows: data,\n    page: page,\n    onPageChange: function onPageChange(newPage) {\n      return setPage(newPage);\n    },\n    pageSize: pageSize,\n    onPageSizeChange: function onPageSizeChange(newPageSize) {\n      return setPageSize(newPageSize);\n    },\n    rowsPerPageOptions: [5, 10, 20],\n    getRowId: function getRowId(row) {\n      return row.ID;\n    },\n    components: {\n      Toolbar: GridToolbar\n    },\n    componentsProps: {\n      toolbar: {\n        showQuickFilter: true\n      }\n    },\n    pagination: true,\n    disableColumnMenu: true,\n    disableColumnSelector: true,\n    disableDensitySelector: true,\n    disableColumnFilter: true,\n    disableSelectionOnClick: true,\n    autoHeight: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default CalendarComp;","map":{"version":3,"sources":["/home/cosbi/financialSite/frontend/src/component/calendarPage/calendarComp.js"],"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","axios","rootApiIP","DataGrid","GridToolbar","columns4","CalendarComp","data","setData","Date","getFullYear","year","setYear","getMonth","month","setMonth","page","setPage","pageSize","setPageSize","post","then","res","catch","response","window","location","reload","clickEvent","info","open","event","title","getCalendarData","fetchInfo","successCallback","start","map","date","el","style","cursor","minheight","height","newPage","newPageSize","row","ID","Toolbar","toolbar","showQuickFilter"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport axios from 'axios';\nimport { rootApiIP } from '../../constant'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport { columns4 } from '../column/column';\n\nfunction CalendarComp() {\n    const [data, setData] = useState([])\n    const [year, setYear] = useState(new Date().getFullYear())\n    const [month, setMonth] = useState(new Date().getMonth() + 1)\n    const [page, setPage] = useState(0);\n    const [pageSize, setPageSize] = useState(10);\n\n    useEffect(() => {\n        axios.post(rootApiIP + \"/data/calenderData\", { \"year\" : year, \"month\" : month })\n        .then(res => {\n            setPage(0)\n            setData(res.data)\n        }).catch(res => {\n            if(res.response.data === \"Session expired\") window.location.reload()\n        })\n    }, [year, month])\n\n    function clickEvent(info){\n        window.open(\"/database/search/\" + info.event.title, '_blank', 'noopener,noreferrer')\n    }\n\n    async function getCalendarData(fetchInfo, successCallback) {\n        try {\n            let year = fetchInfo.start.getFullYear()\n            let month = fetchInfo.start.getMonth() + 1;\n\n            setYear(year)\n            setMonth(month)\n\n            const response = await axios.post(rootApiIP + \"/data/calender\", { \"year\" : year, \"month\" : month })\n\n            successCallback(\n                response.data.map(event => {\n                    return ({\n                        title: event.title,\n                        start: event.date,\n                    });\n                })\n            );\n        } catch (error) {\n            if(error.response.data === \"Session expired\") window.location.reload()\n        }\n    }\n\n    return (\n        <>\n            <div className = 'row mt-3 mx-auto text-center'>\n                <h1>法說會行事曆</h1>\n            </div>\n\n            <div className = 'row mt-3 mx-auto'>\n                <div className = 'col-md-6 mx-auto'>\n                    <FullCalendar\n                        height = { \"auto\" }\n                        plugins={[ dayGridPlugin ]}\n                        initialView = \"dayGridMonth\"\n                        events = { (fetchInfo, successCallback) => getCalendarData(fetchInfo, successCallback) }\n                        dayMaxEventRows = { 3 }\n                        eventClick = { clickEvent }\n                        eventMouseEnter = { info => info.el.style.cursor = \"pointer\" }\n                        showNonCurrentDates = { false }\n                        fixedWeekCount = { false }\n                    />\n                </div>\n            </div>\n\n            <div className = 'row mt-5 mx-auto text-center'>\n                <h2>法說會詳細資訊</h2>\n            </div>\n\n            <div className = 'row mt-3 mx-auto' style = {{minheight : \"600px\", height : \"900px\"}}>\n                <div className = 'col-md-10 mx-auto'>\n                    <DataGrid\n                        columns = { columns4 }\n                        rows = { data }\n                        page = { page }\n                        onPageChange = {(newPage) => setPage(newPage)}\n                        pageSize = { pageSize }\n                        onPageSizeChange={ (newPageSize) => setPageSize(newPageSize) }\n                        rowsPerPageOptions = {[5, 10, 20]}\n                        getRowId = { row => row.ID }\n                        components = {{ Toolbar: GridToolbar }}\n                        componentsProps = {{ toolbar: { showQuickFilter: true },}}\n                        pagination\n                        disableColumnMenu\n                        disableColumnSelector\n                        disableDensitySelector\n                        disableColumnFilter\n                        disableSelectionOnClick = { true }\n                        autoHeight = { true }\n                    />\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default CalendarComp;"]},"metadata":{},"sourceType":"module"}