{"ast":null,"code":"import React, { useEffect, useRef } from 'react';\nimport { useTypeaheadContext } from '../../core/Context'; // IE doesn't seem to get the composite computed value (eg: 'padding',\n// 'borderStyle', etc.), so generate these from the individual values.\n\nfunction interpolateStyle(styles, attr) {\n  var subattr = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ''; // Title-case the sub-attribute.\n\n  if (subattr) {\n    /* eslint-disable-next-line no-param-reassign */\n    subattr = subattr.replace(subattr[0], subattr[0].toUpperCase());\n  }\n\n  return ['Top', 'Right', 'Bottom', 'Left'].map(function (dir) {\n    return styles[\"\".concat(attr).concat(dir).concat(subattr)];\n  }).join(' ');\n}\n\nfunction copyStyles(inputNode, hintNode) {\n  var inputStyle = window.getComputedStyle(inputNode);\n  /* eslint-disable no-param-reassign */\n\n  hintNode.style.borderStyle = interpolateStyle(inputStyle, 'border', 'style');\n  hintNode.style.borderWidth = interpolateStyle(inputStyle, 'border', 'width');\n  hintNode.style.fontSize = inputStyle.fontSize;\n  hintNode.style.height = inputStyle.height;\n  hintNode.style.lineHeight = inputStyle.lineHeight;\n  hintNode.style.margin = interpolateStyle(inputStyle, 'margin');\n  hintNode.style.padding = interpolateStyle(inputStyle, 'padding');\n  /* eslint-enable no-param-reassign */\n}\n\nexport var useHint = function useHint() {\n  var _useTypeaheadContext = useTypeaheadContext(),\n      hintText = _useTypeaheadContext.hintText,\n      inputNode = _useTypeaheadContext.inputNode;\n\n  var hintRef = useRef(null);\n  useEffect(function () {\n    if (inputNode && hintRef.current) {\n      copyStyles(inputNode, hintRef.current);\n    }\n  });\n  return {\n    hintRef: hintRef,\n    hintText: hintText\n  };\n};\n\nvar Hint = function Hint(_ref) {\n  var children = _ref.children,\n      className = _ref.className;\n\n  var _useHint = useHint(),\n      hintRef = _useHint.hintRef,\n      hintText = _useHint.hintText;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: {\n      display: 'flex',\n      flex: 1,\n      height: '100%',\n      position: 'relative'\n    }\n  }, children, /*#__PURE__*/React.createElement(\"input\", {\n    \"aria-hidden\": true,\n    className: \"rbt-input-hint\",\n    ref: hintRef,\n    readOnly: true,\n    style: {\n      backgroundColor: 'transparent',\n      borderColor: 'transparent',\n      boxShadow: 'none',\n      color: 'rgba(0, 0, 0, 0.54)',\n      left: 0,\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      width: '100%'\n    },\n    tabIndex: -1,\n    value: hintText\n  }));\n};\n\nexport default Hint;","map":null,"metadata":{},"sourceType":"module"}