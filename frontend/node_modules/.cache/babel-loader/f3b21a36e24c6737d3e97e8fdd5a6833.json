{"ast":null,"code":"/*\n Highstock JS v10.2.1 (2022-08-29)\n\n Advanced Highcharts Stock tools\n\n (c) 2010-2021 Highsoft AS\n Author: Torstein Honsi\n\n License: www.highcharts.com/license\n*/\n(function (b) {\n  \"object\" === typeof module && module.exports ? (b[\"default\"] = b, module.exports = b) : \"function\" === typeof define && define.amd ? define(\"highcharts/modules/full-screen\", [\"highcharts\"], function (d) {\n    b(d);\n    b.Highcharts = d;\n    return b;\n  }) : b(\"undefined\" !== typeof Highcharts ? Highcharts : void 0);\n})(function (b) {\n  function d(b, c, d, f) {\n    b.hasOwnProperty(c) || (b[c] = f.apply(null, d), \"function\" === typeof CustomEvent && window.dispatchEvent(new CustomEvent(\"HighchartsModuleLoaded\", {\n      detail: {\n        path: c,\n        module: b[c]\n      }\n    })));\n  }\n\n  b = b ? b._modules : {};\n  d(b, \"Extensions/Exporting/Fullscreen.js\", [b[\"Core/Renderer/HTML/AST.js\"], b[\"Core/Utilities.js\"]], function (b, c) {\n    function d() {\n      this.fullscreen = new g(this);\n    }\n\n    var f = c.addEvent,\n        e = c.fireEvent,\n        h = [],\n        g = function () {\n      function c(a) {\n        this.chart = a;\n        this.isOpen = !1;\n        a = a.renderTo;\n        this.browserProps || (\"function\" === typeof a.requestFullscreen ? this.browserProps = {\n          fullscreenChange: \"fullscreenchange\",\n          requestFullscreen: \"requestFullscreen\",\n          exitFullscreen: \"exitFullscreen\"\n        } : a.mozRequestFullScreen ? this.browserProps = {\n          fullscreenChange: \"mozfullscreenchange\",\n          requestFullscreen: \"mozRequestFullScreen\",\n          exitFullscreen: \"mozCancelFullScreen\"\n        } : a.webkitRequestFullScreen ? this.browserProps = {\n          fullscreenChange: \"webkitfullscreenchange\",\n          requestFullscreen: \"webkitRequestFullScreen\",\n          exitFullscreen: \"webkitExitFullscreen\"\n        } : a.msRequestFullscreen && (this.browserProps = {\n          fullscreenChange: \"MSFullscreenChange\",\n          requestFullscreen: \"msRequestFullscreen\",\n          exitFullscreen: \"msExitFullscreen\"\n        }));\n      }\n\n      c.compose = function (a) {\n        -1 === h.indexOf(a) && (h.push(a), f(a, \"beforeRender\", d));\n      };\n\n      c.prototype.close = function () {\n        var a = this,\n            b = a.chart,\n            c = b.options.chart;\n        e(b, \"fullscreenClose\", null, function () {\n          if (a.isOpen && a.browserProps && b.container.ownerDocument instanceof Document) b.container.ownerDocument[a.browserProps.exitFullscreen]();\n          a.unbindFullscreenEvent && (a.unbindFullscreenEvent = a.unbindFullscreenEvent());\n          b.setSize(a.origWidth, a.origHeight, !1);\n          a.origWidth = void 0;\n          a.origHeight = void 0;\n          c.width = a.origWidthOption;\n          c.height = a.origHeightOption;\n          a.origWidthOption = void 0;\n          a.origHeightOption = void 0;\n          a.isOpen = !1;\n          a.setButtonText();\n        });\n      };\n\n      c.prototype.open = function () {\n        var a = this,\n            b = a.chart,\n            c = b.options.chart;\n        e(b, \"fullscreenOpen\", null, function () {\n          c && (a.origWidthOption = c.width, a.origHeightOption = c.height);\n          a.origWidth = b.chartWidth;\n          a.origHeight = b.chartHeight;\n\n          if (a.browserProps) {\n            var d = f(b.container.ownerDocument, a.browserProps.fullscreenChange, function () {\n              a.isOpen ? (a.isOpen = !1, a.close()) : (b.setSize(null, null, !1), a.isOpen = !0, a.setButtonText());\n            }),\n                k = f(b, \"destroy\", d);\n\n            a.unbindFullscreenEvent = function () {\n              d();\n              k();\n            };\n\n            var e = b.renderTo[a.browserProps.requestFullscreen]();\n            if (e) e[\"catch\"](function () {\n              alert(\"Full screen is not supported inside a frame.\");\n            });\n          }\n        });\n      };\n\n      c.prototype.setButtonText = function () {\n        var a = this.chart,\n            c = a.exportDivElements,\n            d = a.options.exporting,\n            e = d && d.buttons && d.buttons.contextButton.menuItems;\n        a = a.options.lang;\n        d && d.menuItemDefinitions && a && a.exitFullscreen && a.viewFullscreen && e && c && (c = c[e.indexOf(\"viewFullscreen\")]) && b.setElementHTML(c, this.isOpen ? a.exitFullscreen : d.menuItemDefinitions.viewFullscreen.text || a.viewFullscreen);\n      };\n\n      c.prototype.toggle = function () {\n        this.isOpen ? this.close() : this.open();\n      };\n\n      return c;\n    }();\n\n    \"\";\n    \"\";\n    return g;\n  });\n  d(b, \"masters/modules/full-screen.src.js\", [b[\"Core/Globals.js\"], b[\"Extensions/Exporting/Fullscreen.js\"]], function (b, c) {\n    b.Fullscreen = c;\n    c.compose(b.Chart);\n  });\n});","map":null,"metadata":{},"sourceType":"script"}