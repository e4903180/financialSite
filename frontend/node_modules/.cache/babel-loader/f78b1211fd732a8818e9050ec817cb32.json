{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"className\", \"isInvalid\", \"isValid\", \"size\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport cx from 'classnames';\nimport { isSizeLarge, isSizeSmall } from './size';\n/**\n * Returns Bootstrap classnames from `size` and validation props, along\n * with pass-through props.\n */\n\nexport default function propsWithBsClassName(_ref) {\n  var className = _ref.className,\n      isInvalid = _ref.isInvalid,\n      isValid = _ref.isValid,\n      size = _ref.size,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return _objectSpread(_objectSpread({}, props), {}, {\n    className: cx('form-control', 'rbt-input', {\n      'form-control-lg': isSizeLarge(size),\n      'form-control-sm': isSizeSmall(size),\n      'is-invalid': isInvalid,\n      'is-valid': isValid\n    }, className)\n  });\n}","map":null,"metadata":{},"sourceType":"module"}